import logging
from pymongo import MongoClient
from datetime import datetime
import numpy as np
import pandas as pd
import csv

pd.set_option('display.max_columns', 100)
logging.basicConfig(level=logging.WARNING, filename='LOG_analysisDataStory11.log',                                                       \
    filemode='w', format='%(asctime)s %(levelname)s:%(message)s')

global arrPortNames, arrKY_CD, arrOFNS_DESC, arrPD_CD, arrPD_DESC, arrPREM_DESC_TYPE, arrLAW_CAT_CD
global arrPedesYear, arrPedesMonth
global arrCrimeDbBoroughNames, arrPedesDbBoroughNames
global FIELDNAMES, outputCSVfile, countTotalRowsWrittenToOutputFile

outputCSVfile = 'D:/EverythingD/01SRH-BDBA Acads/Blk7-DataStoryTelling/Data4Analysis/outCSV/outCSVFile.csv'

arrPedesYear = [2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017]
arrPedesMonth = [5, 9]

arrCrimeDbBoroughNames = [ "QUEENS", "BRONX", "BROOKLYN", "STATEN ISLAND", "MANHATTAN" ]
arrPedesDbBoroughNames = [ "Queens", "Bronx", "Brooklyn", "Staten Island", "Manhattan" ]

arrPortsDbPortNames = [ "new york", "newark", "los angeles" ]

arrKY_CD = [101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 230, 231, 232, 233, 234, 235, 236, 237, 238, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 455, 460, 571, 572, 577, 578, 672, 675, 676, 677, 678, 685, 881]

arrPD_CD = [ 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 125, 143, 146, 148, 153, 155, 157, 159, 162, 164, 166, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 191, 193, 195, 197, 198, 199, 201, 203, 204, 205, 209, 211, 213, 214, 221, 223, 224, 231, 233, 234, 241, 243, 244, 248, 254, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 277, 281, 283, 285, 289, 291, 293, 297, 299, 301, 303, 305, 307, 313, 321, 323, 327, 329, 331, 333, 335, 338, 339, 341, 342, 343, 344, 345, 347, 349, 350, 351, 355, 357, 360, 361, 363, 365, 366, 367, 371, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 447, 450, 451, 455, 457, 461, 462, 464, 466, 468, 475, 476, 477, 478, 479, 489, 490, 491, 493, 494, 498, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 523, 524, 529, 530, 531, 532, 533, 537, 544, 548, 553, 557, 561, 563, 565, 566, 567, 568, 569, 570, 574, 576, 584, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 602, 604, 605, 610, 614, 618, 619, 622, 625, 627, 633, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 652, 659, 661, 662, 663, 664, 665, 667, 669, 672, 674, 678, 681, 683, 685, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 701, 703, 705, 706, 707, 708, 711, 715, 718, 719, 721, 723, 724, 725, 727, 729, 730, 731, 733, 737, 739, 742, 744, 746, 748, 749, 750, 754, 756, 759, 760, 761, 762, 764, 766, 770, 772, 775, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 796, 797, 798, 799, 802, 803, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 826, 827, 829, 836, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 853, 858, 860, 861, 862, 864, 866, 868, 872, 874, 876, 877, 878, 879, 880, 885, 887, 888, 889, 890, 892, 899, 904, 905, 907, 916, 918, 922, 969, 975 ]

arrOFNS_DESC = ['ABORTION', 'ADMINISTRATIVE CODE', 'ADMINISTRATIVE CODES', 'AGRICULTURE & MRKTS LAW-UNCLASSIFIED', 'ALCOHOLIC BEVERAGE CONTROL LAW', 'ANTICIPATORY OFFENSES', 'ARSON', 'ASSAULT 3 & RELATED OFFENSES', "BURGLAR'S TOOLS", 'BURGLARY', 'CHILD ABANDONMENT/NON SUPPORT', 'CRIMINAL MISCHIEF & RELATED OF', 'CRIMINAL TRESPASS', 'DANGEROUS DRUGS', 'DANGEROUS WEAPONS', 'DISORDERLY CONDUCT', 'DISRUPTION OF A RELIGIOUS SERV', 'ENDAN WELFARE INCOMP', 'ESCAPE 3', 'FELONY ASSAULT', 'FORGERY', 'FORTUNE TELLING', 'FRAUDS', 'FRAUDULENT ACCOSTING', 'GAMBLING', 'GRAND LARCENY', 'GRAND LARCENY OF MOTOR VEHICLE', 'HARRASSMENT 2', 'HOMICIDE-NEGLIGENT,UNCLASSIFIE', 'HOMICIDE-NEGLIGENT-VEHICLE', 'INTOXICATED & IMPAIRED DRIVING', 'INTOXICATED/IMPAIRED DRIVING', 'JOSTLING', 'KIDNAPPING', 'KIDNAPPING & RELATED OFFENSES', 'KIDNAPPING AND RELATED OFFENSES', 'LOITERING', 'LOITERING FOR DRUG PURPOSES', 'LOITERING/DEVIATE SEX', 'LOITERING/GAMBLING (CARDS, DIC', 'MISCELLANEOUS PENAL LAW', 'MURDER & NON-NEGL. MANSLAUGHTER', 'NEW YORK CITY HEALTH CODE', 'NYS LAWS-UNCLASSIFIED FELONY', 'NYS LAWS-UNCLASSIFIED VIOLATION', 'OFF. AGNST PUB ORD SENSBLTY &', 'OFFENSES AGAINST MARRIAGE UNCL', 'OFFENSES AGAINST PUBLIC ADMINI', 'OFFENSES AGAINST PUBLIC SAFETY', 'OFFENSES AGAINST THE PERSON', 'OFFENSES INVOLVING FRAUD', 'OFFENSES RELATED TO CHILDREN', 'OTHER OFFENSES RELATED TO THEF', 'OTHER STATE LAWS', 'OTHER STATE LAWS (NON PENAL LA', 'OTHER STATE LAWS (NON PENAL LAW)', 'OTHER TRAFFIC INFRACTION', 'PETIT LARCENY', 'PETIT LARCENY OF MOTOR VEHICLE', 'POSSESSION OF STOLEN PROPERTY', 'PROSTITUTION & RELATED OFFENSES', 'RAPE', 'ROBBERY', 'SEX CRIMES', 'THEFT OF SERVICES', 'THEFT-FRAUD', 'UNAUTHORIZED USE OF A VEHICLE', 'UNDER THE INFLUENCE OF DRUGS', 'UNLAWFUL POSS. WEAP. ON SCHOOL', 'VEHICLE AND TRAFFIC LAWS']

arrPD_DESC = ['A.B.C.,FALSE PROOF OF AGE', 'ABANDON ANIMAL', 'ABORTION 1', 'ABORTION 2, 1, SELF', 'ABORTIONAL ARTICLES,ISSUING', 'ABSCONDING FROM WORK RELEASE 2', 'ACCOSTING,FRAUDULENT', 'ADM.CODE,UNCLASSIFIED MISDEMEA', 'ADM.CODE,UNCLASSIFIED VIOLATIO', 'AGGRAVATED CRIMINAL CONTEMPT', 'AGGRAVATED HARASSMENT 1', 'AGGRAVATED HARASSMENT 2', 'AGGRAVATED SEXUAL ASBUSE', 'AGRICULTURE & MARKETS LAW,UNCL', 'AIR POLLUTION-MOTOR VEH (ADM C', 'AIRPOLLUTION', 'ALCOHOLIC BEVERAGE CONTROL LAW', 'ALCOHOLIC BEVERAGES,PUBLIC CON', 'ANARCHY,CRIMINAL', 'APPEARANCE TICKET FAIL TO RESP', 'ARSON 1', 'ARSON 2,3,4', 'ARSON, MOTOR VEHICLE 1 2 3 & 4', 'ASSAULT 2,1,UNCLASSIFIED', 'ASSAULT 3', 'ASSAULT OTHER PUBLIC SERVICE EMPLOYEE', 'ASSAULT POLICE/PEACE OFFICER', 'ASSAULT SCHOOL SAFETY AGENT', 'ASSAULT TRAFFIC AGENT', 'ASSEMBLY,UNLAWFUL', 'ATTEND/SPECTATOR ANIMAL FIGHTING', 'BAIL JUMPING 1 & 2', 'BAIL JUMPING 3', 'BIGAMY', 'BREED/TRAIN/HOST ANIMAL FIGHTING', 'BRIBERY, POLICE OFFICER', 'BRIBERY,COMMERCIAL', 'BRIBERY,FRAUD', 'BRIBERY,PUBLIC ADMINISTRATION', 'BUILDING MATERIAL', 'BURGLARS TOOLS,UNCLASSIFIED', 'BURGLARY,COMMERCIAL,DAY', 'BURGLARY,COMMERCIAL,NIGHT', 'BURGLARY,COMMERCIAL,UNKNOWN TI', 'BURGLARY,RESIDENCE,DAY', 'BURGLARY,RESIDENCE,NIGHT', 'BURGLARY,RESIDENCE,UNKNOWN TIM', 'BURGLARY,TRUCK DAY', 'BURGLARY,TRUCK NIGHT', 'BURGLARY,UNCLASSIFIED,DAY', 'BURGLARY,UNCLASSIFIED,NIGHT', 'BURGLARY,UNCLASSIFIED,UNKNOWN', 'BURGLARY,UNKNOWN TIME', 'CAUSE SPI/KILL ANIMAL', 'CHECK,BAD', 'CHILD ABANDONMENT', 'CHILD, ENDANGERING WELFARE', 'CHILD,ALCOHOL SALE TO', 'CHILD,LICENSED PREMISES', 'CHILD,OFFENSES AGAINST,UNCLASS', 'CIGARETTE,NO TAX STAMP,POSSESS', 'COERCION 1', 'COERCION 2', 'COMPUTER TAMPER/TRESSPASS', 'COMPUTER UNAUTH. USE/TAMPER', 'CONFINING ANIMAL IN VEHICLE/SHELTER', 'CONSPIRACY 2, 1', 'CONSPIRACY 4, 3', 'CONSPIRACY 6, 5', 'CONTEMPT,CRIMINAL', 'CONTROLLED SUBSTANCE, INTENT T', 'CONTROLLED SUBSTANCE, POSSESSI', 'CONTROLLED SUBSTANCE, SALE 4', 'CONTROLLED SUBSTANCE, SALE 5', 'CONTROLLED SUBSTANCE,INTENT TO', 'CONTROLLED SUBSTANCE,POSSESS.', 'CONTROLLED SUBSTANCE,POSSESS.-', 'CONTROLLED SUBSTANCE,SALE 1', 'CONTROLLED SUBSTANCE,SALE 2', 'CONTROLLED SUBSTANCE,SALE 3', 'COURSE OF SEXUAL CONDUCT AGAIN', 'CREDIT CARD,UNLAWFUL USE OF', 'CRIMINAL CONTEMPT 1', 'CRIMINAL DISPOSAL FIREARM 1 &', 'CRIMINAL MIS 2 & 3', 'CRIMINAL MISCHIEF 4TH, GRAFFIT', 'CRIMINAL MISCHIEF,UNCLASSIFIED 4', 'CUSTODIAL INTERFERENCE 1', 'CUSTODIAL INTERFERENCE 2', 'DIS. CON.,AGGRAVATED', 'DISORDERLY CONDUCT', 'DISSEMINATING A FALSE SEX OFFEND', 'DOG STEALING', 'DRUG PARAPHERNALIA,   POSSESSE', 'DRUG, INJECTION OF', 'EAVESDROPPING', 'EDUCATION LAW', 'EDUCATION LAW, TRUANCY', 'EDUCATION LAW,STREET TRADE', 'EDUCATION LAW,UNCLASSIFIED', 'END WELFARE VULNERABLE ELDERLY PERSON', 'ENTERPRISE CORRUPTION', 'ENVIRONMENTAL CONTROL BOARD', 'ESCAPE 2,1', 'ESCAPE 3', 'EXPOSURE OF A PERSON', 'FAC. SEXUAL OFFENSE W/CONTROLL', 'FACILITATION 3,2,1, CRIMINAL', 'FACILITATION 4, CRIMINAL', 'FALSE ALARM FIRE', 'FALSE REPORT 1,FIRE', 'FALSE REPORT BOMB', 'FALSE REPORT UNCLASSIFIED', 'FIREARMS LICENSING LAWS', 'FIREWORKS', 'FIREWORKS PREV CONV 5 YEARS', 'FIREWORKS, POSSESS/USE', 'FIREWORKS, SALE', 'FORGERY,DRIVERS LICENSE', 'FORGERY,ETC.,UNCLASSIFIED-FELO', 'FORGERY,ETC.-MISD.', 'FORGERY,M.V. REGISTRATION', 'FORGERY,PRESCRIPTION', 'FORGERY-ILLEGAL POSSESSION,VEH', 'FORTUNE TELLING', 'FRAUD,UNCLASSIFIED-FELONY', 'FRAUD,UNCLASSIFIED-MISDEMEANOR', 'GAMBLING 1,PROMOTING,BOOKMAKIN', 'GAMBLING 1,PROMOTING,POLICY', 'GAMBLING 2, PROMOTING, BOOKMAK', 'GAMBLING 2, PROMOTING, POLICY-', 'GAMBLING 2,PROMOTING,UNCLASSIF', 'GAMBLING, DEVICE, POSSESSION', 'GENERAL BUSINESS LAW / UNCLASSIFIED', 'GENERAL BUSINESS LAW,TICKET SP', 'GRAFFITI (ADMINISTRATIVE CODE-', 'GRAND LARCENY-CHECK FROM MAILB', 'GYPSY CAB', 'HARASSMENT,SUBD 1,CIVILIAN', 'HARASSMENT,SUBD 3,4,5', 'HEALTH CODE,UNCLASSIFIED MISDE', 'HEALTH CODE,VIOLATION', 'HEALTHCARE/RENT.REG.', 'HIND PROSEC. TERR 2', 'HOMICIDE, NEGLIGENT, VEHICLE,', 'HOMICIDE,NEGLIGENT,UNCLASSIFIE', 'HOMICIDE,NEGLIGENT,VEHICLE', 'IMITATION PISTOL/AIR RIFLE', 'IMPAIRED DRIVING,DRUG', 'IMPERSONATION 1, POLICE OFFICE', 'IMPERSONATION 2, PUBLIC SERVAN', 'IMPRISONMENT 1,UNLAWFUL', 'IMPRISONMENT 2,UNLAWFUL', 'INAPPROPIATE SHELTER DOG LEFT', 'INCEST', 'INCOMPETENT PERSON,KNOWINGLY ENDANGERING', 'INCOMPETENT PERSON,RECKLESSY ENDANGERING', 'INTOXICATED DRIVING,ALCOHOL', 'JOSTLING', 'KIDNAPPING 1', 'KIDNAPPING 2', 'LABOR LAW,EMPLOYING CHILDREN', 'LABOR TRAFFICKING', 'LARCENY, GRAND OF AUTO - ATTEM', 'LARCENY, GRAND OF MOPED', 'LARCENY, PETIT OF AUTO - ATTEM', 'LARCENY, PETIT OF MOPED', 'LARCENY,GRAND BY ACQUIRING LOS', 'LARCENY,GRAND BY ACQUIRING LOST CREDIT CARD', 'LARCENY,GRAND BY BANK ACCT COMPROMISE-ATM TRANSACTION', 'LARCENY,GRAND BY BANK ACCT COMPROMISE-REPRODUCED CHECK', 'LARCENY,GRAND BY BANK ACCT COMPROMISE-TELLER', 'LARCENY,GRAND BY BANK ACCT COMPROMISE-UNAUTHORIZED PURCHASE', 'LARCENY,GRAND BY BANK ACCT COMPROMISE-UNCLASSIFIED', 'LARCENY,GRAND BY CREDIT CARD ACCT COMPROMISE-EXISTING ACCT', 'LARCENY,GRAND BY CREDIT CARD COMPROMISE-UNAUTHORIZE PURCHASE', 'LARCENY,GRAND BY DISHONEST EMP', 'LARCENY,GRAND BY EXTORTION', 'LARCENY,GRAND BY FALSE PROMISE', 'LARCENY,GRAND BY FALSE PROMISE-IN PERSON CONTACT', 'LARCENY,GRAND BY FALSE PROMISE-NOT IN PERSON CONTACT', 'LARCENY,GRAND BY IDENTITY THEFT-UNCLASSIFIED', 'LARCENY,GRAND BY OPEN BANK ACCT', 'LARCENY,GRAND BY OPEN CREDIT CARD (NEW ACCT)', 'LARCENY,GRAND BY OPEN/COMPROMISE CELL PHONE ACCT', 'LARCENY,GRAND BY THEFT OF CREDIT CARD', 'LARCENY,GRAND FROM BOAT, UNATTENDED', 'LARCENY,GRAND FROM BUILDING (NON-RESIDENCE) UNATTENDED', 'LARCENY,GRAND FROM COIN MACHIN', 'LARCENY,GRAND FROM EATERY, UNATTENDED', 'LARCENY,GRAND FROM NIGHT CLUB, UNATTENDED', 'LARCENY,GRAND FROM OPEN AREAS, UNATTENDED', 'LARCENY,GRAND FROM PARKING MET', 'LARCENY,GRAND FROM PERSON, BAG OPEN/DIP', 'LARCENY,GRAND FROM PERSON,LUSH WORKER(SLEEPING/UNCON VICTIM)', 'LARCENY,GRAND FROM PERSON,PERSONAL ELECTRONIC DEVICE(SNATCH)', 'LARCENY,GRAND FROM PERSON,PICK', 'LARCENY,GRAND FROM PERSON,PURS', 'LARCENY,GRAND FROM PERSON,UNCL', 'LARCENY,GRAND FROM PIER, UNATTENDED', 'LARCENY,GRAND FROM RESIDENCE, UNATTENDED', 'LARCENY,GRAND FROM RETAIL STORE, UNATTENDED', 'LARCENY,GRAND FROM STORE-SHOPL', 'LARCENY,GRAND FROM TRUCK, UNATTENDED', 'LARCENY,GRAND FROM VEHICLE/MOTORCYCLE', 'LARCENY,GRAND OF AUTO', 'LARCENY,GRAND OF BICYCLE', 'LARCENY,GRAND OF BOAT', 'LARCENY,GRAND OF MOTORCYCLE', 'LARCENY,GRAND OF TRUCK', 'LARCENY,GRAND OF VEHICULAR/MOTORCYCLE ACCESSORIES', 'LARCENY,GRAND PERSON,NECK CHAI', 'LARCENY,PETIT BY ACQUIRING LOS', 'LARCENY,PETIT BY CHECK USE', 'LARCENY,PETIT BY CREDIT CARD U', 'LARCENY,PETIT BY DISHONEST EMP', 'LARCENY,PETIT BY FALSE PROMISE', 'LARCENY,PETIT FROM AUTO', 'LARCENY,PETIT FROM BOAT', 'LARCENY,PETIT FROM BUILDING,UN', 'LARCENY,PETIT FROM COIN MACHIN', 'LARCENY,PETIT FROM OPEN AREAS,', 'LARCENY,PETIT FROM PARKING MET', 'LARCENY,PETIT FROM PIER', 'LARCENY,PETIT FROM STORE-SHOPL', 'LARCENY,PETIT FROM TRUCK', 'LARCENY,PETIT OF AUTO', 'LARCENY,PETIT OF BICYCLE', 'LARCENY,PETIT OF BOAT', 'LARCENY,PETIT OF LICENSE PLATE', 'LARCENY,PETIT OF MOTORCYCLE', 'LARCENY,PETIT OF TRUCK', 'LARCENY,PETIT OF VEHICLE ACCES', 'LEAVING SCENE-ACCIDENT-PERSONA', 'LEWDNESS,PUBLIC', 'LOITERING 1ST DEGREE FOR DRUG', 'LOITERING FOR PROSTITUTION OR', 'LOITERING TO PROMOTE PROSTITUT', 'LOITERING,DEVIATE SEX', 'LOITERING,GAMBLING,OTHER', 'LOITERING,SCHOOL', 'LOITERING,UNCLASSIFIED', 'LURING A CHILD', 'MAKING TERRORISTIC THREAT', 'MANUFACTURE UNAUTHORIZED RECOR', 'MARIJUANA, POSSESSION', 'MARIJUANA, POSSESSION 1, 2 & 3', 'MARIJUANA, POSSESSION 4 & 5', 'MARIJUANA, SALE 1, 2 & 3', 'MARIJUANA, SALE 4 & 5', 'MARRIAGE,OFFENSES AGAINST,UNCL', 'MATERIAL              OFFENSIV', 'MENACING 1ST DEGREE (VICT NOT', 'MENACING 1ST DEGREE (VICT PEAC', 'MENACING,PEACE OFFICER', 'MENACING,UNCLASSIFIED', 'MISCHIEF 1,CRIMINAL,EXPLOSIVE', 'MISCHIEF, CRIMINAL 3 & 2, OF M', 'MISCHIEF, CRIMINAL 3&2, BY FIR', 'MISCHIEF, CRIMINAL 4, BY FIRE', 'MISCHIEF, CRIMINAL 4, OF MOTOR', 'MISCHIEF,CRIMINAL,    UNCL 2ND', 'MONEY LAUNDERING 1 & 2', 'N.Y.C. TRANSIT AUTH. R&R', 'NAVIGATION LAW', 'NEGLECT/POISON ANIMAL', 'NOISE,UNECESSARY', 'NUISANCE, CRIMINAL', 'NUISANCE,CRIMINAL,UNCLASSIFIED', 'NY STATE LAWS,UNCLASSIFIED FEL', 'NY STATE LAWS,UNCLASSIFIED MIS', 'NY STATE LAWS,UNCLASSIFIED VIO', 'OBSCENE MATERIAL - UNDER 17 YE', 'OBSCENITY 1', 'OBSCENITY, MATERIAL 3', 'OBSCENITY, PERFORMANCE 3', 'OBSTR BREATH/CIRCUL', 'PARK R&R,GAMBLING', 'PARKR&R,UNCLASSIFIED VIOLATION', 'PEDDLING,UNLAWFUL', 'PERJURY 2,1,ETC', 'PERJURY 3,ETC.', 'PETIT LARCENY OF ANIMAL', 'PETIT LARCENY-CHECK FROM MAILB', 'PLACE FALSE BOMB', 'POSS METH MANUFACT MATERIAL', 'POSSES OR CARRY A KNIFE', 'POSSESS PARAPHERNALIA/ANIMAL FIGHTING', 'POSSESSION ANTI-SECURITY ITEM', 'POSSESSION HYPODERMIC INSTRUME', 'POSTING ADVERTISEMENTS', 'PRIVACY,OFFENSES AGAINST,UNCLA', 'PROMOTING A SEXUAL PERFORMANCE', 'PROMOTING SUICIDE ATTEMPT', 'PROSTITUTION', 'PROSTITUTION 1, UNDER 11', 'PROSTITUTION 2, COMPULSORY', 'PROSTITUTION 2, UNDER 16', 'PROSTITUTION 3, PROMOTING UNDE', 'PROSTITUTION 3,PROMOTING BUSIN', 'PROSTITUTION 4,PROMOTING&SECUR', 'PROSTITUTION, PATRONIZING 2, 1', 'PROSTITUTION, PATRONIZING 4, 3', 'PROSTITUTION,PERMITTING', 'PUBLIC ADMINISTATION,UNCLASS M', 'PUBLIC ADMINISTRATION,UNCLASSI', 'PUBLIC HEALTH LAW,GLUE,INHALAT', 'PUBLIC HEALTH LAW,GLUE,UNLAWFU', 'PUBLIC HEALTH LAW,UNCLASSIFIED', 'PUBLIC SAFETY,UNCLASSIFIED MIS', 'RADIO DEVICES,UNLAWFUL POSSESS', 'RAPE 1', 'RAPE 1,ATTEMPT', 'RAPE 2', 'RAPE 3', 'RECKLESS DRIVING', 'RECKLESS ENDANGERMENT 1', 'RECKLESS ENDANGERMENT 2', 'RECKLESS ENDANGERMENT OF PROPE', 'RECORDS,FALSIFY-TAMPER', 'RESISTING ARREST', 'RIOT 1', 'RIOT 2/INCITING', 'ROBBERY, CHAIN STORE', 'ROBBERY, PAYROLL', 'ROBBERY,ATM LOCATION', 'ROBBERY,BANK', 'ROBBERY,BAR/RESTAURANT', 'ROBBERY,BEGIN AS SHOPLIFTING', 'ROBBERY,BICYCLE', 'ROBBERY,BODEGA/CONVENIENCE STORE', 'ROBBERY,CAR JACKING', 'ROBBERY,CHECK CASHING BUSINESS', 'ROBBERY,CLOTHING', 'ROBBERY,COMMERCIAL UNCLASSIFIED', 'ROBBERY,DELIVERY PERSON', 'ROBBERY,DOCTOR/DENTIST OFFICE', 'ROBBERY,DWELLING', 'ROBBERY,GAS STATION', 'ROBBERY,HIJACKING', 'ROBBERY,HOME INVASION', 'ROBBERY,LICENSED FOR HIRE VEHICLE', 'ROBBERY,LICENSED MEDALLION CAB', 'ROBBERY,LIQUOR STORE', 'ROBBERY,NECKCHAIN/JEWELRY', 'ROBBERY,OF TRUCK DRIVER', 'ROBBERY,ON BUS/ OR BUS DRIVER', 'ROBBERY,OPEN AREA UNCLASSIFIED', 'ROBBERY,PERSONAL ELECTRONIC DEVICE', 'ROBBERY,PHARMACY', 'ROBBERY,POCKETBOOK/CARRIED BAG', 'ROBBERY,PUBLIC PLACE INSIDE', 'ROBBERY,RESIDENTIAL COMMON AREA', 'ROBBERY,UNLICENSED FOR HIRE VEHICLE', 'SALE OF UNAUTHORIZED RECORDING', 'SALE SCHOOL GROUNDS', 'SALE SCHOOL GROUNDS 4', 'SALES OF PRESCRIPTION', 'SEX CRIMES', 'SEX TRAFFICKING', 'SEXUAL ABUSE', 'SEXUAL ABUSE 3,2', 'SEXUAL MISCONDUCT,DEVIATE', 'SEXUAL MISCONDUCT,INTERCOURSE', 'SMOKING TRANSPORTATION FACILIT', 'SODOMY 1', 'SODOMY 2', 'SODOMY 3', 'SODOMY,CONSENSUAL', 'SOLICITATION 3,2,1, CRIMINAL', 'SOLICITATION 4, CRIMINAL', 'SOLICITATION 5,CRIMINAL', 'STOLEN PROP-MOTOR VEHICLE 3RD,', 'STOLEN PROPERTY 2,1,POSSESSION', 'STOLEN PROPERTY 2,POSSESSION B', 'STOLEN PROPERTY 3,POSSESSION', 'STOLEN PROPERTY-MOTOR VEH 2ND,', 'STRANGULATION 1ST', 'SUPP. ACT TERR 2ND', 'TAMPERING 1,CRIMINAL', 'TAMPERING 3,2, CRIMINAL', 'TAMPERING WITH A WITNESS', 'TAX LAW', 'TERRORISM PROVIDE SUPPORT', 'THEFT OF SERVICES, UNCLASSIFIE', 'THEFT OF SERVICES- CABLE TV SE', 'THEFT,RELATED OFFENSES,UNCLASS', 'TORTURE/INJURE ANIMAL CRUELTY', 'TRAFFIC,UNCLASSIFIED INFRACTIO', 'TRAFFIC,UNCLASSIFIED MISDEMEAN', 'TRESPASS 1,CRIMINAL', 'TRESPASS 2, CRIMINAL', 'TRESPASS 3, CRIMINAL', 'TRESPASS 4,CRIMINAL SUB 2', 'UNAUTH. SALE OF TRANS. SERVICE', 'UNAUTHORIZED USE VEHICLE 2', 'UNAUTHORIZED USE VEHICLE 3', 'UNDER THE INFLUENCE OF DRUGS', 'UNLAWFUL DISCLOSURE OF AN INTIMATE IMAGE', 'UNLAWFUL POSS. WEAPON UPON SCH', 'UNLAWFUL SALE SYNTHETIC MARIJUANA', 'USE CHILD TO COMMIT CONT SUB OFF', 'USE OF A CHILD IN A SEXUAL PER', 'USURY,CRIMINAL', 'VEHICULAR ASSAULT (INTOX DRIVE', 'VIOLATION OF ORDER OF PROTECTI', 'WEAPONS DISPOSITION OF', 'WEAPONS POSSESSION 1 & 2', 'WEAPONS POSSESSION 3', 'WEAPONS, POSSESSION, ETC', 'WEAPONS,MFR,TRANSPORT,ETC.', 'WEAPONS,PROHIBITED USE', 'WEAPONS,PROHIBITED USE IMITATI', 'WOUNDS,REPORTING OF']

arrPREM_DESC_TYPE = ['ABANDONED BUILDING', 'AIRPORT TERMINAL', 'ATM', 'BANK', 'BAR/NIGHT CLUB', 'BEAUTY & NAIL SALON', 'BOOK/CARD', 'BRIDGE', 'BUS (NYC TRANSIT)', 'BUS (OTHER)', 'BUS STOP', 'BUS TERMINAL', 'CANDY STORE', 'CEMETERY', 'CHAIN STORE', 'CHECK CASHING BUSINESS', 'CHURCH', 'CLOTHING/BOUTIQUE', 'COMMERCIAL BUILDING', 'CONSTRUCTION SITE', 'DEPARTMENT STORE', 'DOCTOR/DENTIST OFFICE', 'DRUG STORE', 'DRY CLEANER/LAUNDRY', 'FACTORY/WAREHOUSE', 'FAST FOOD', 'FERRY/FERRY TERMINAL', 'FOOD SUPERMARKET', 'GAS STATION', 'GROCERY/BODEGA', 'GYM/FITNESS FACILITY', 'HIGHWAY/PARKWAY', 'HOSPITAL', 'HOTEL/MOTEL', 'JEWELRY', 'LIQUOR STORE', 'LOAN COMPANY', 'MAILBOX INSIDE', 'MAILBOX OUTSIDE', 'MARINA/PIER', 'MOSQUE', 'OPEN AREAS (OPEN LOTS)', 'OTHER', 'OTHER HOUSE OF WORSHIP', 'PARK/PLAYGROUND', 'PARKING LOT/GARAGE (PRIVATE)', 'PARKING LOT/GARAGE (PUBLIC)', 'PHOTO/COPY', 'PRIVATE/PAROCHIAL SCHOOL', 'PUBLIC BUILDING', 'PUBLIC SCHOOL', 'RESIDENCE - APT. HOUSE', 'RESIDENCE - PUBLIC HOUSING', 'RESIDENCE-HOUSE', 'RESTAURANT/DINER', 'SHOE', 'SMALL MERCHANT', 'SOCIAL CLUB/POLICY', 'STORAGE FACILITY', 'STORE UNCLASSIFIED', 'STREET', 'SYNAGOGUE', 'TAXI (LIVERY LICENSED)', 'TAXI (YELLOW LICENSED)', 'TAXI/LIVERY (UNLICENSED)', 'TELECOMM. STORE', 'TRAMWAY', 'TRANSIT - NYC SUBWAY', 'TRANSIT FACILITY (OTHER)', 'TUNNEL', 'VARIETY STORE', 'VIDEO STORE']

arrLAW_CAT_CD = [ "FELONY", "MISDEMEANOR", "VIOLATION" ]

FIELDNAMES = [ 'year' , 'month' , 'boroName' , 'countPedes' , 'portNY' , 'countPortNY' , 'portNewark' , 'countPortNewark' , 'portLA' , 'countPortLA' , 'crimeTotal' , 'crimeKY_CD1', 'sumCrimeKY_CD1', 'crimeKY_CD2', 'sumCrimeKY_CD2', 'crimeKY_CD3', 'sumCrimeKY_CD3', 'crimeKY_CD4', 'sumCrimeKY_CD4', 'crimeKY_CD5', 'sumCrimeKY_CD5', 'crimeKY_CD6', 'sumCrimeKY_CD6', 'crimeKY_CD7', 'sumCrimeKY_CD7', 'crimeKY_CD8', 'sumCrimeKY_CD8', 'crimeKY_CD9', 'sumCrimeKY_CD9', 'crimeKY_CD10', 'sumCrimeKY_CD10', 'crimeKY_CD11', 'sumCrimeKY_CD11', 'crimeKY_CD12', 'sumCrimeKY_CD12', 'crimeKY_CD13', 'sumCrimeKY_CD13', 'crimeKY_CD14', 'sumCrimeKY_CD14', 'crimeKY_CD15', 'sumCrimeKY_CD15', 'crimeKY_CD16', 'sumCrimeKY_CD16', 'crimeKY_CD17', 'sumCrimeKY_CD17', 'crimeKY_CD18', 'sumCrimeKY_CD18', 'crimeKY_CD19', 'sumCrimeKY_CD19', 'crimeKY_CD20', 'sumCrimeKY_CD20', 'crimeKY_CD21', 'sumCrimeKY_CD21', 'crimeKY_CD22', 'sumCrimeKY_CD22', 'crimeKY_CD23', 'sumCrimeKY_CD23', 'crimeKY_CD24', 'sumCrimeKY_CD24', 'crimeKY_CD25', 'sumCrimeKY_CD25', 'crimeKY_CD26', 'sumCrimeKY_CD26', 'crimeKY_CD27', 'sumCrimeKY_CD27', 'crimeKY_CD28', 'sumCrimeKY_CD28', 'crimeKY_CD29', 'sumCrimeKY_CD29', 'crimeKY_CD30', 'sumCrimeKY_CD30', 'crimeKY_CD31', 'sumCrimeKY_CD31', 'crimeKY_CD32', 'sumCrimeKY_CD32', 'crimeKY_CD33', 'sumCrimeKY_CD33', 'crimeKY_CD34', 'sumCrimeKY_CD34', 'crimeKY_CD35', 'sumCrimeKY_CD35', 'crimeKY_CD36', 'sumCrimeKY_CD36', 'crimeKY_CD37', 'sumCrimeKY_CD37', 'crimeKY_CD38', 'sumCrimeKY_CD38', 'crimeKY_CD39', 'sumCrimeKY_CD39', 'crimeKY_CD40', 'sumCrimeKY_CD40', 'crimeKY_CD41', 'sumCrimeKY_CD41', 'crimeKY_CD42', 'sumCrimeKY_CD42', 'crimeKY_CD43', 'sumCrimeKY_CD43', 'crimeKY_CD44', 'sumCrimeKY_CD44', 'crimeKY_CD45', 'sumCrimeKY_CD45', 'crimeKY_CD46', 'sumCrimeKY_CD46', 'crimeKY_CD47', 'sumCrimeKY_CD47', 'crimeKY_CD48', 'sumCrimeKY_CD48', 'crimeKY_CD49', 'sumCrimeKY_CD49', 'crimeKY_CD50', 'sumCrimeKY_CD50', 'crimeKY_CD51', 'sumCrimeKY_CD51', 'crimeKY_CD52', 'sumCrimeKY_CD52', 'crimeKY_CD53', 'sumCrimeKY_CD53', 'crimeKY_CD54', 'sumCrimeKY_CD54', 'crimeKY_CD55', 'sumCrimeKY_CD55', 'crimeKY_CD56', 'sumCrimeKY_CD56', 'crimeKY_CD57', 'sumCrimeKY_CD57', 'crimeKY_CD58', 'sumCrimeKY_CD58', 'crimeKY_CD59', 'sumCrimeKY_CD59', 'crimeKY_CD60', 'sumCrimeKY_CD60', 'crimeKY_CD61', 'sumCrimeKY_CD61', 'crimeKY_CD62', 'sumCrimeKY_CD62', 'crimeKY_CD63', 'sumCrimeKY_CD63', 'crimeKY_CD64', 'sumCrimeKY_CD64', 'crimeKY_CD65', 'sumCrimeKY_CD65', 'crimeKY_CD66', 'sumCrimeKY_CD66', 'crimeKY_CD67', 'sumCrimeKY_CD67', 'crimeKY_CD68', 'sumCrimeKY_CD68', 'crimeKY_CD69', 'sumCrimeKY_CD69', 'crimeKY_CD70', 'sumCrimeKY_CD70', 'crimeKY_CD71', 'sumCrimeKY_CD71', 'crimeKY_CD72', 'sumCrimeKY_CD72', 'crimeKY_CD73', 'sumCrimeKY_CD73', 'crimeKY_CD74', 'sumCrimeKY_CD74', 'crimeOFNS_DESC1', 'sumCrimeOFNS_DESC1', 'crimeOFNS_DESC2', 'sumCrimeOFNS_DESC2', 'crimeOFNS_DESC3', 'sumCrimeOFNS_DESC3', 'crimeOFNS_DESC4', 'sumCrimeOFNS_DESC4', 'crimeOFNS_DESC5', 'sumCrimeOFNS_DESC5', 'crimeOFNS_DESC6', 'sumCrimeOFNS_DESC6', 'crimeOFNS_DESC7', 'sumCrimeOFNS_DESC7', 'crimeOFNS_DESC8', 'sumCrimeOFNS_DESC8', 'crimeOFNS_DESC9', 'sumCrimeOFNS_DESC9', 'crimeOFNS_DESC10', 'sumCrimeOFNS_DESC10', 'crimeOFNS_DESC11', 'sumCrimeOFNS_DESC11', 'crimeOFNS_DESC12', 'sumCrimeOFNS_DESC12', 'crimeOFNS_DESC13', 'sumCrimeOFNS_DESC13', 'crimeOFNS_DESC14', 'sumCrimeOFNS_DESC14', 'crimeOFNS_DESC15', 'sumCrimeOFNS_DESC15', 'crimeOFNS_DESC16', 'sumCrimeOFNS_DESC16', 'crimeOFNS_DESC17', 'sumCrimeOFNS_DESC17', 'crimeOFNS_DESC18', 'sumCrimeOFNS_DESC18', 'crimeOFNS_DESC19', 'sumCrimeOFNS_DESC19', 'crimeOFNS_DESC20', 'sumCrimeOFNS_DESC20', 'crimeOFNS_DESC21', 'sumCrimeOFNS_DESC21', 'crimeOFNS_DESC22', 'sumCrimeOFNS_DESC22', 'crimeOFNS_DESC23', 'sumCrimeOFNS_DESC23', 'crimeOFNS_DESC24', 'sumCrimeOFNS_DESC24', 'crimeOFNS_DESC25', 'sumCrimeOFNS_DESC25', 'crimeOFNS_DESC26', 'sumCrimeOFNS_DESC26', 'crimeOFNS_DESC27', 'sumCrimeOFNS_DESC27', 'crimeOFNS_DESC28', 'sumCrimeOFNS_DESC28', 'crimeOFNS_DESC29', 'sumCrimeOFNS_DESC29', 'crimeOFNS_DESC30', 'sumCrimeOFNS_DESC30', 'crimeOFNS_DESC31', 'sumCrimeOFNS_DESC31', 'crimeOFNS_DESC32', 'sumCrimeOFNS_DESC32', 'crimeOFNS_DESC33', 'sumCrimeOFNS_DESC33', 'crimeOFNS_DESC34', 'sumCrimeOFNS_DESC34', 'crimeOFNS_DESC35', 'sumCrimeOFNS_DESC35', 'crimeOFNS_DESC36', 'sumCrimeOFNS_DESC36', 'crimeOFNS_DESC37', 'sumCrimeOFNS_DESC37', 'crimeOFNS_DESC38', 'sumCrimeOFNS_DESC38', 'crimeOFNS_DESC39', 'sumCrimeOFNS_DESC39', 'crimeOFNS_DESC40', 'sumCrimeOFNS_DESC40', 'crimeOFNS_DESC41', 'sumCrimeOFNS_DESC41', 'crimeOFNS_DESC42', 'sumCrimeOFNS_DESC42', 'crimeOFNS_DESC43', 'sumCrimeOFNS_DESC43', 'crimeOFNS_DESC44', 'sumCrimeOFNS_DESC44', 'crimeOFNS_DESC45', 'sumCrimeOFNS_DESC45', 'crimeOFNS_DESC46', 'sumCrimeOFNS_DESC46', 'crimeOFNS_DESC47', 'sumCrimeOFNS_DESC47', 'crimeOFNS_DESC48', 'sumCrimeOFNS_DESC48', 'crimeOFNS_DESC49', 'sumCrimeOFNS_DESC49', 'crimeOFNS_DESC50', 'sumCrimeOFNS_DESC50', 'crimeOFNS_DESC51', 'sumCrimeOFNS_DESC51', 'crimeOFNS_DESC52', 'sumCrimeOFNS_DESC52', 'crimeOFNS_DESC53', 'sumCrimeOFNS_DESC53', 'crimeOFNS_DESC54', 'sumCrimeOFNS_DESC54', 'crimeOFNS_DESC55', 'sumCrimeOFNS_DESC55', 'crimeOFNS_DESC56', 'sumCrimeOFNS_DESC56', 'crimeOFNS_DESC57', 'sumCrimeOFNS_DESC57', 'crimeOFNS_DESC58', 'sumCrimeOFNS_DESC58', 'crimeOFNS_DESC59', 'sumCrimeOFNS_DESC59', 'crimeOFNS_DESC60', 'sumCrimeOFNS_DESC60', 'crimeOFNS_DESC61', 'sumCrimeOFNS_DESC61', 'crimeOFNS_DESC62', 'sumCrimeOFNS_DESC62', 'crimeOFNS_DESC63', 'sumCrimeOFNS_DESC63', 'crimeOFNS_DESC64', 'sumCrimeOFNS_DESC64', 'crimeOFNS_DESC65', 'sumCrimeOFNS_DESC65', 'crimeOFNS_DESC66', 'sumCrimeOFNS_DESC66', 'crimeOFNS_DESC67', 'sumCrimeOFNS_DESC67', 'crimeOFNS_DESC68', 'sumCrimeOFNS_DESC68', 'crimeOFNS_DESC69', 'sumCrimeOFNS_DESC69', 'crimeOFNS_DESC70', 'sumCrimeOFNS_DESC70', 'crimePD_CD1', 'sumCrimePD_CD1', 'crimePD_CD2', 'sumCrimePD_CD2', 'crimePD_CD3', 'sumCrimePD_CD3', 'crimePD_CD4', 'sumCrimePD_CD4', 'crimePD_CD5', 'sumCrimePD_CD5', 'crimePD_CD6', 'sumCrimePD_CD6', 'crimePD_CD7', 'sumCrimePD_CD7', 'crimePD_CD8', 'sumCrimePD_CD8', 'crimePD_CD9', 'sumCrimePD_CD9', 'crimePD_CD10', 'sumCrimePD_CD10', 'crimePD_CD11', 'sumCrimePD_CD11', 'crimePD_CD12', 'sumCrimePD_CD12', 'crimePD_CD13', 'sumCrimePD_CD13', 'crimePD_CD14', 'sumCrimePD_CD14', 'crimePD_CD15', 'sumCrimePD_CD15', 'crimePD_CD16', 'sumCrimePD_CD16', 'crimePD_CD17', 'sumCrimePD_CD17', 'crimePD_CD18', 'sumCrimePD_CD18', 'crimePD_CD19', 'sumCrimePD_CD19', 'crimePD_CD20', 'sumCrimePD_CD20', 'crimePD_CD21', 'sumCrimePD_CD21', 'crimePD_CD22', 'sumCrimePD_CD22', 'crimePD_CD23', 'sumCrimePD_CD23', 'crimePD_CD24', 'sumCrimePD_CD24', 'crimePD_CD25', 'sumCrimePD_CD25', 'crimePD_CD26', 'sumCrimePD_CD26', 'crimePD_CD27', 'sumCrimePD_CD27', 'crimePD_CD28', 'sumCrimePD_CD28', 'crimePD_CD29', 'sumCrimePD_CD29', 'crimePD_CD30', 'sumCrimePD_CD30', 'crimePD_CD31', 'sumCrimePD_CD31', 'crimePD_CD32', 'sumCrimePD_CD32', 'crimePD_CD33', 'sumCrimePD_CD33', 'crimePD_CD34', 'sumCrimePD_CD34', 'crimePD_CD35', 'sumCrimePD_CD35', 'crimePD_CD36', 'sumCrimePD_CD36', 'crimePD_CD37', 'sumCrimePD_CD37', 'crimePD_CD38', 'sumCrimePD_CD38', 'crimePD_CD39', 'sumCrimePD_CD39', 'crimePD_CD40', 'sumCrimePD_CD40', 'crimePD_CD41', 'sumCrimePD_CD41', 'crimePD_CD42', 'sumCrimePD_CD42', 'crimePD_CD43', 'sumCrimePD_CD43', 'crimePD_CD44', 'sumCrimePD_CD44', 'crimePD_CD45', 'sumCrimePD_CD45', 'crimePD_CD46', 'sumCrimePD_CD46', 'crimePD_CD47', 'sumCrimePD_CD47', 'crimePD_CD48', 'sumCrimePD_CD48', 'crimePD_CD49', 'sumCrimePD_CD49', 'crimePD_CD50', 'sumCrimePD_CD50', 'crimePD_CD51', 'sumCrimePD_CD51', 'crimePD_CD52', 'sumCrimePD_CD52', 'crimePD_CD53', 'sumCrimePD_CD53', 'crimePD_CD54', 'sumCrimePD_CD54', 'crimePD_CD55', 'sumCrimePD_CD55', 'crimePD_CD56', 'sumCrimePD_CD56', 'crimePD_CD57', 'sumCrimePD_CD57', 'crimePD_CD58', 'sumCrimePD_CD58', 'crimePD_CD59', 'sumCrimePD_CD59', 'crimePD_CD60', 'sumCrimePD_CD60', 'crimePD_CD61', 'sumCrimePD_CD61', 'crimePD_CD62', 'sumCrimePD_CD62', 'crimePD_CD63', 'sumCrimePD_CD63', 'crimePD_CD64', 'sumCrimePD_CD64', 'crimePD_CD65', 'sumCrimePD_CD65', 'crimePD_CD66', 'sumCrimePD_CD66', 'crimePD_CD67', 'sumCrimePD_CD67', 'crimePD_CD68', 'sumCrimePD_CD68', 'crimePD_CD69', 'sumCrimePD_CD69', 'crimePD_CD70', 'sumCrimePD_CD70', 'crimePD_CD71', 'sumCrimePD_CD71', 'crimePD_CD72', 'sumCrimePD_CD72', 'crimePD_CD73', 'sumCrimePD_CD73', 'crimePD_CD74', 'sumCrimePD_CD74', 'crimePD_CD75', 'sumCrimePD_CD75', 'crimePD_CD76', 'sumCrimePD_CD76', 'crimePD_CD77', 'sumCrimePD_CD77', 'crimePD_CD78', 'sumCrimePD_CD78', 'crimePD_CD79', 'sumCrimePD_CD79', 'crimePD_CD80', 'sumCrimePD_CD80', 'crimePD_CD81', 'sumCrimePD_CD81', 'crimePD_CD82', 'sumCrimePD_CD82', 'crimePD_CD83', 'sumCrimePD_CD83', 'crimePD_CD84', 'sumCrimePD_CD84', 'crimePD_CD85', 'sumCrimePD_CD85', 'crimePD_CD86', 'sumCrimePD_CD86', 'crimePD_CD87', 'sumCrimePD_CD87', 'crimePD_CD88', 'sumCrimePD_CD88', 'crimePD_CD89', 'sumCrimePD_CD89', 'crimePD_CD90', 'sumCrimePD_CD90', 'crimePD_CD91', 'sumCrimePD_CD91', 'crimePD_CD92', 'sumCrimePD_CD92', 'crimePD_CD93', 'sumCrimePD_CD93', 'crimePD_CD94', 'sumCrimePD_CD94', 'crimePD_CD95', 'sumCrimePD_CD95', 'crimePD_CD96', 'sumCrimePD_CD96', 'crimePD_CD97', 'sumCrimePD_CD97', 'crimePD_CD98', 'sumCrimePD_CD98', 'crimePD_CD99', 'sumCrimePD_CD99', 'crimePD_CD100', 'sumCrimePD_CD100', 'crimePD_CD101', 'sumCrimePD_CD101', 'crimePD_CD102', 'sumCrimePD_CD102', 'crimePD_CD103', 'sumCrimePD_CD103', 'crimePD_CD104', 'sumCrimePD_CD104', 'crimePD_CD105', 'sumCrimePD_CD105', 'crimePD_CD106', 'sumCrimePD_CD106', 'crimePD_CD107', 'sumCrimePD_CD107', 'crimePD_CD108', 'sumCrimePD_CD108', 'crimePD_CD109', 'sumCrimePD_CD109', 'crimePD_CD110', 'sumCrimePD_CD110', 'crimePD_CD111', 'sumCrimePD_CD111', 'crimePD_CD112', 'sumCrimePD_CD112', 'crimePD_CD113', 'sumCrimePD_CD113', 'crimePD_CD114', 'sumCrimePD_CD114', 'crimePD_CD115', 'sumCrimePD_CD115', 'crimePD_CD116', 'sumCrimePD_CD116', 'crimePD_CD117', 'sumCrimePD_CD117', 'crimePD_CD118', 'sumCrimePD_CD118', 'crimePD_CD119', 'sumCrimePD_CD119', 'crimePD_CD120', 'sumCrimePD_CD120', 'crimePD_CD121', 'sumCrimePD_CD121', 'crimePD_CD122', 'sumCrimePD_CD122', 'crimePD_CD123', 'sumCrimePD_CD123', 'crimePD_CD124', 'sumCrimePD_CD124', 'crimePD_CD125', 'sumCrimePD_CD125', 'crimePD_CD126', 'sumCrimePD_CD126', 'crimePD_CD127', 'sumCrimePD_CD127', 'crimePD_CD128', 'sumCrimePD_CD128', 'crimePD_CD129', 'sumCrimePD_CD129', 'crimePD_CD130', 'sumCrimePD_CD130', 'crimePD_CD131', 'sumCrimePD_CD131', 'crimePD_CD132', 'sumCrimePD_CD132', 'crimePD_CD133', 'sumCrimePD_CD133', 'crimePD_CD134', 'sumCrimePD_CD134', 'crimePD_CD135', 'sumCrimePD_CD135', 'crimePD_CD136', 'sumCrimePD_CD136', 'crimePD_CD137', 'sumCrimePD_CD137', 'crimePD_CD138', 'sumCrimePD_CD138', 'crimePD_CD139', 'sumCrimePD_CD139', 'crimePD_CD140', 'sumCrimePD_CD140', 'crimePD_CD141', 'sumCrimePD_CD141', 'crimePD_CD142', 'sumCrimePD_CD142', 'crimePD_CD143', 'sumCrimePD_CD143', 'crimePD_CD144', 'sumCrimePD_CD144', 'crimePD_CD145', 'sumCrimePD_CD145', 'crimePD_CD146', 'sumCrimePD_CD146', 'crimePD_CD147', 'sumCrimePD_CD147', 'crimePD_CD148', 'sumCrimePD_CD148', 'crimePD_CD149', 'sumCrimePD_CD149', 'crimePD_CD150', 'sumCrimePD_CD150', 'crimePD_CD151', 'sumCrimePD_CD151', 'crimePD_CD152', 'sumCrimePD_CD152', 'crimePD_CD153', 'sumCrimePD_CD153', 'crimePD_CD154', 'sumCrimePD_CD154', 'crimePD_CD155', 'sumCrimePD_CD155', 'crimePD_CD156', 'sumCrimePD_CD156', 'crimePD_CD157', 'sumCrimePD_CD157', 'crimePD_CD158', 'sumCrimePD_CD158', 'crimePD_CD159', 'sumCrimePD_CD159', 'crimePD_CD160', 'sumCrimePD_CD160', 'crimePD_CD161', 'sumCrimePD_CD161', 'crimePD_CD162', 'sumCrimePD_CD162', 'crimePD_CD163', 'sumCrimePD_CD163', 'crimePD_CD164', 'sumCrimePD_CD164', 'crimePD_CD165', 'sumCrimePD_CD165', 'crimePD_CD166', 'sumCrimePD_CD166', 'crimePD_CD167', 'sumCrimePD_CD167', 'crimePD_CD168', 'sumCrimePD_CD168', 'crimePD_CD169', 'sumCrimePD_CD169', 'crimePD_CD170', 'sumCrimePD_CD170', 'crimePD_CD171', 'sumCrimePD_CD171', 'crimePD_CD172', 'sumCrimePD_CD172', 'crimePD_CD173', 'sumCrimePD_CD173', 'crimePD_CD174', 'sumCrimePD_CD174', 'crimePD_CD175', 'sumCrimePD_CD175', 'crimePD_CD176', 'sumCrimePD_CD176', 'crimePD_CD177', 'sumCrimePD_CD177', 'crimePD_CD178', 'sumCrimePD_CD178', 'crimePD_CD179', 'sumCrimePD_CD179', 'crimePD_CD180', 'sumCrimePD_CD180', 'crimePD_CD181', 'sumCrimePD_CD181', 'crimePD_CD182', 'sumCrimePD_CD182', 'crimePD_CD183', 'sumCrimePD_CD183', 'crimePD_CD184', 'sumCrimePD_CD184', 'crimePD_CD185', 'sumCrimePD_CD185', 'crimePD_CD186', 'sumCrimePD_CD186', 'crimePD_CD187', 'sumCrimePD_CD187', 'crimePD_CD188', 'sumCrimePD_CD188', 'crimePD_CD189', 'sumCrimePD_CD189', 'crimePD_CD190', 'sumCrimePD_CD190', 'crimePD_CD191', 'sumCrimePD_CD191', 'crimePD_CD192', 'sumCrimePD_CD192', 'crimePD_CD193', 'sumCrimePD_CD193', 'crimePD_CD194', 'sumCrimePD_CD194', 'crimePD_CD195', 'sumCrimePD_CD195', 'crimePD_CD196', 'sumCrimePD_CD196', 'crimePD_CD197', 'sumCrimePD_CD197', 'crimePD_CD198', 'sumCrimePD_CD198', 'crimePD_CD199', 'sumCrimePD_CD199', 'crimePD_CD200', 'sumCrimePD_CD200', 'crimePD_CD201', 'sumCrimePD_CD201', 'crimePD_CD202', 'sumCrimePD_CD202', 'crimePD_CD203', 'sumCrimePD_CD203', 'crimePD_CD204', 'sumCrimePD_CD204', 'crimePD_CD205', 'sumCrimePD_CD205', 'crimePD_CD206', 'sumCrimePD_CD206', 'crimePD_CD207', 'sumCrimePD_CD207', 'crimePD_CD208', 'sumCrimePD_CD208', 'crimePD_CD209', 'sumCrimePD_CD209', 'crimePD_CD210', 'sumCrimePD_CD210', 'crimePD_CD211', 'sumCrimePD_CD211', 'crimePD_CD212', 'sumCrimePD_CD212', 'crimePD_CD213', 'sumCrimePD_CD213', 'crimePD_CD214', 'sumCrimePD_CD214', 'crimePD_CD215', 'sumCrimePD_CD215', 'crimePD_CD216', 'sumCrimePD_CD216', 'crimePD_CD217', 'sumCrimePD_CD217', 'crimePD_CD218', 'sumCrimePD_CD218', 'crimePD_CD219', 'sumCrimePD_CD219', 'crimePD_CD220', 'sumCrimePD_CD220', 'crimePD_CD221', 'sumCrimePD_CD221', 'crimePD_CD222', 'sumCrimePD_CD222', 'crimePD_CD223', 'sumCrimePD_CD223', 'crimePD_CD224', 'sumCrimePD_CD224', 'crimePD_CD225', 'sumCrimePD_CD225', 'crimePD_CD226', 'sumCrimePD_CD226', 'crimePD_CD227', 'sumCrimePD_CD227', 'crimePD_CD228', 'sumCrimePD_CD228', 'crimePD_CD229', 'sumCrimePD_CD229', 'crimePD_CD230', 'sumCrimePD_CD230', 'crimePD_CD231', 'sumCrimePD_CD231', 'crimePD_CD232', 'sumCrimePD_CD232', 'crimePD_CD233', 'sumCrimePD_CD233', 'crimePD_CD234', 'sumCrimePD_CD234', 'crimePD_CD235', 'sumCrimePD_CD235', 'crimePD_CD236', 'sumCrimePD_CD236', 'crimePD_CD237', 'sumCrimePD_CD237', 'crimePD_CD238', 'sumCrimePD_CD238', 'crimePD_CD239', 'sumCrimePD_CD239', 'crimePD_CD240', 'sumCrimePD_CD240', 'crimePD_CD241', 'sumCrimePD_CD241', 'crimePD_CD242', 'sumCrimePD_CD242', 'crimePD_CD243', 'sumCrimePD_CD243', 'crimePD_CD244', 'sumCrimePD_CD244', 'crimePD_CD245', 'sumCrimePD_CD245', 'crimePD_CD246', 'sumCrimePD_CD246', 'crimePD_CD247', 'sumCrimePD_CD247', 'crimePD_CD248', 'sumCrimePD_CD248', 'crimePD_CD249', 'sumCrimePD_CD249', 'crimePD_CD250', 'sumCrimePD_CD250', 'crimePD_CD251', 'sumCrimePD_CD251', 'crimePD_CD252', 'sumCrimePD_CD252', 'crimePD_CD253', 'sumCrimePD_CD253', 'crimePD_CD254', 'sumCrimePD_CD254', 'crimePD_CD255', 'sumCrimePD_CD255', 'crimePD_CD256', 'sumCrimePD_CD256', 'crimePD_CD257', 'sumCrimePD_CD257', 'crimePD_CD258', 'sumCrimePD_CD258', 'crimePD_CD259', 'sumCrimePD_CD259', 'crimePD_CD260', 'sumCrimePD_CD260', 'crimePD_CD261', 'sumCrimePD_CD261', 'crimePD_CD262', 'sumCrimePD_CD262', 'crimePD_CD263', 'sumCrimePD_CD263', 'crimePD_CD264', 'sumCrimePD_CD264', 'crimePD_CD265', 'sumCrimePD_CD265', 'crimePD_CD266', 'sumCrimePD_CD266', 'crimePD_CD267', 'sumCrimePD_CD267', 'crimePD_CD268', 'sumCrimePD_CD268', 'crimePD_CD269', 'sumCrimePD_CD269', 'crimePD_CD270', 'sumCrimePD_CD270', 'crimePD_CD271', 'sumCrimePD_CD271', 'crimePD_CD272', 'sumCrimePD_CD272', 'crimePD_CD273', 'sumCrimePD_CD273', 'crimePD_CD274', 'sumCrimePD_CD274', 'crimePD_CD275', 'sumCrimePD_CD275', 'crimePD_CD276', 'sumCrimePD_CD276', 'crimePD_CD277', 'sumCrimePD_CD277', 'crimePD_CD278', 'sumCrimePD_CD278', 'crimePD_CD279', 'sumCrimePD_CD279', 'crimePD_CD280', 'sumCrimePD_CD280', 'crimePD_CD281', 'sumCrimePD_CD281', 'crimePD_CD282', 'sumCrimePD_CD282', 'crimePD_CD283', 'sumCrimePD_CD283', 'crimePD_CD284', 'sumCrimePD_CD284', 'crimePD_CD285', 'sumCrimePD_CD285', 'crimePD_CD286', 'sumCrimePD_CD286', 'crimePD_CD287', 'sumCrimePD_CD287', 'crimePD_CD288', 'sumCrimePD_CD288', 'crimePD_CD289', 'sumCrimePD_CD289', 'crimePD_CD290', 'sumCrimePD_CD290', 'crimePD_CD291', 'sumCrimePD_CD291', 'crimePD_CD292', 'sumCrimePD_CD292', 'crimePD_CD293', 'sumCrimePD_CD293', 'crimePD_CD294', 'sumCrimePD_CD294', 'crimePD_CD295', 'sumCrimePD_CD295', 'crimePD_CD296', 'sumCrimePD_CD296', 'crimePD_CD297', 'sumCrimePD_CD297', 'crimePD_CD298', 'sumCrimePD_CD298', 'crimePD_CD299', 'sumCrimePD_CD299', 'crimePD_CD300', 'sumCrimePD_CD300', 'crimePD_CD301', 'sumCrimePD_CD301', 'crimePD_CD302', 'sumCrimePD_CD302', 'crimePD_CD303', 'sumCrimePD_CD303', 'crimePD_CD304', 'sumCrimePD_CD304', 'crimePD_CD305', 'sumCrimePD_CD305', 'crimePD_CD306', 'sumCrimePD_CD306', 'crimePD_CD307', 'sumCrimePD_CD307', 'crimePD_CD308', 'sumCrimePD_CD308', 'crimePD_CD309', 'sumCrimePD_CD309', 'crimePD_CD310', 'sumCrimePD_CD310', 'crimePD_CD311', 'sumCrimePD_CD311', 'crimePD_CD312', 'sumCrimePD_CD312', 'crimePD_CD313', 'sumCrimePD_CD313', 'crimePD_CD314', 'sumCrimePD_CD314', 'crimePD_CD315', 'sumCrimePD_CD315', 'crimePD_CD316', 'sumCrimePD_CD316', 'crimePD_CD317', 'sumCrimePD_CD317', 'crimePD_CD318', 'sumCrimePD_CD318', 'crimePD_CD319', 'sumCrimePD_CD319', 'crimePD_CD320', 'sumCrimePD_CD320', 'crimePD_CD321', 'sumCrimePD_CD321', 'crimePD_CD322', 'sumCrimePD_CD322', 'crimePD_CD323', 'sumCrimePD_CD323', 'crimePD_CD324', 'sumCrimePD_CD324', 'crimePD_CD325', 'sumCrimePD_CD325', 'crimePD_CD326', 'sumCrimePD_CD326', 'crimePD_CD327', 'sumCrimePD_CD327', 'crimePD_CD328', 'sumCrimePD_CD328', 'crimePD_CD329', 'sumCrimePD_CD329', 'crimePD_CD330', 'sumCrimePD_CD330', 'crimePD_CD331', 'sumCrimePD_CD331', 'crimePD_CD332', 'sumCrimePD_CD332', 'crimePD_CD333', 'sumCrimePD_CD333', 'crimePD_CD334', 'sumCrimePD_CD334', 'crimePD_CD335', 'sumCrimePD_CD335', 'crimePD_CD336', 'sumCrimePD_CD336', 'crimePD_CD337', 'sumCrimePD_CD337', 'crimePD_CD338', 'sumCrimePD_CD338', 'crimePD_CD339', 'sumCrimePD_CD339', 'crimePD_CD340', 'sumCrimePD_CD340', 'crimePD_CD341', 'sumCrimePD_CD341', 'crimePD_CD342', 'sumCrimePD_CD342', 'crimePD_CD343', 'sumCrimePD_CD343', 'crimePD_CD344', 'sumCrimePD_CD344', 'crimePD_CD345', 'sumCrimePD_CD345', 'crimePD_CD346', 'sumCrimePD_CD346', 'crimePD_CD347', 'sumCrimePD_CD347', 'crimePD_CD348', 'sumCrimePD_CD348', 'crimePD_CD349', 'sumCrimePD_CD349', 'crimePD_CD350', 'sumCrimePD_CD350', 'crimePD_CD351', 'sumCrimePD_CD351', 'crimePD_CD352', 'sumCrimePD_CD352', 'crimePD_CD353', 'sumCrimePD_CD353', 'crimePD_CD354', 'sumCrimePD_CD354', 'crimePD_CD355', 'sumCrimePD_CD355', 'crimePD_CD356', 'sumCrimePD_CD356', 'crimePD_CD357', 'sumCrimePD_CD357', 'crimePD_CD358', 'sumCrimePD_CD358', 'crimePD_CD359', 'sumCrimePD_CD359', 'crimePD_CD360', 'sumCrimePD_CD360', 'crimePD_CD361', 'sumCrimePD_CD361', 'crimePD_CD362', 'sumCrimePD_CD362', 'crimePD_CD363', 'sumCrimePD_CD363', 'crimePD_CD364', 'sumCrimePD_CD364', 'crimePD_CD365', 'sumCrimePD_CD365', 'crimePD_CD366', 'sumCrimePD_CD366', 'crimePD_CD367', 'sumCrimePD_CD367', 'crimePD_CD368', 'sumCrimePD_CD368', 'crimePD_CD369', 'sumCrimePD_CD369', 'crimePD_CD370', 'sumCrimePD_CD370', 'crimePD_CD371', 'sumCrimePD_CD371', 'crimePD_CD372', 'sumCrimePD_CD372', 'crimePD_CD373', 'sumCrimePD_CD373', 'crimePD_CD374', 'sumCrimePD_CD374', 'crimePD_CD375', 'sumCrimePD_CD375', 'crimePD_CD376', 'sumCrimePD_CD376', 'crimePD_CD377', 'sumCrimePD_CD377', 'crimePD_CD378', 'sumCrimePD_CD378', 'crimePD_CD379', 'sumCrimePD_CD379', 'crimePD_CD380', 'sumCrimePD_CD380', 'crimePD_CD381', 'sumCrimePD_CD381', 'crimePD_CD382', 'sumCrimePD_CD382', 'crimePD_CD383', 'sumCrimePD_CD383', 'crimePD_CD384', 'sumCrimePD_CD384', 'crimePD_CD385', 'sumCrimePD_CD385', 'crimePD_CD386', 'sumCrimePD_CD386', 'crimePD_CD387', 'sumCrimePD_CD387', 'crimePD_CD388', 'sumCrimePD_CD388', 'crimePD_CD389', 'sumCrimePD_CD389', 'crimePD_CD390', 'sumCrimePD_CD390', 'crimePD_CD391', 'sumCrimePD_CD391', 'crimePD_CD392', 'sumCrimePD_CD392', 'crimePD_CD393', 'sumCrimePD_CD393', 'crimePD_CD394', 'sumCrimePD_CD394', 'crimePD_CD395', 'sumCrimePD_CD395', 'crimePD_CD396', 'sumCrimePD_CD396', 'crimePD_CD397', 'sumCrimePD_CD397', 'crimePD_CD398', 'sumCrimePD_CD398', 'crimePD_CD399', 'sumCrimePD_CD399', 'crimePD_CD400', 'sumCrimePD_CD400', 'crimePD_CD401', 'sumCrimePD_CD401', 'crimePD_CD402', 'sumCrimePD_CD402', 'crimePD_CD403', 'sumCrimePD_CD403', 'crimePD_CD404', 'sumCrimePD_CD404', 'crimePD_CD405', 'sumCrimePD_CD405', 'crimePD_CD406', 'sumCrimePD_CD406', 'crimePD_CD407', 'sumCrimePD_CD407', 'crimePD_CD408', 'sumCrimePD_CD408', 'crimePD_CD409', 'sumCrimePD_CD409', 'crimePD_CD410', 'sumCrimePD_CD410', 'crimePD_CD411', 'sumCrimePD_CD411', 'crimePD_CD412', 'sumCrimePD_CD412', 'crimePD_CD413', 'sumCrimePD_CD413', 'crimePD_CD414', 'sumCrimePD_CD414', 'crimePD_CD415', 'sumCrimePD_CD415', 'crimePD_CD416', 'sumCrimePD_CD416', 'crimePD_CD417', 'sumCrimePD_CD417', 'crimePD_CD418', 'sumCrimePD_CD418', 'crimePD_CD419', 'sumCrimePD_CD419', 'crimePD_CD420', 'sumCrimePD_CD420', 'crimePD_CD421', 'sumCrimePD_CD421', 'crimePD_CD422', 'sumCrimePD_CD422', 'crimePD_CD423', 'sumCrimePD_CD423', 'crimePD_CD424', 'sumCrimePD_CD424', 'crimePD_CD425', 'sumCrimePD_CD425', 'crimePD_CD426', 'sumCrimePD_CD426', 'crimePD_DESC1', 'sumCrimePD_DESC1', 'crimePD_DESC2', 'sumCrimePD_DESC2', 'crimePD_DESC3', 'sumCrimePD_DESC3', 'crimePD_DESC4', 'sumCrimePD_DESC4', 'crimePD_DESC5', 'sumCrimePD_DESC5', 'crimePD_DESC6', 'sumCrimePD_DESC6', 'crimePD_DESC7', 'sumCrimePD_DESC7', 'crimePD_DESC8', 'sumCrimePD_DESC8', 'crimePD_DESC9', 'sumCrimePD_DESC9', 'crimePD_DESC10', 'sumCrimePD_DESC10', 'crimePD_DESC11', 'sumCrimePD_DESC11', 'crimePD_DESC12', 'sumCrimePD_DESC12', 'crimePD_DESC13', 'sumCrimePD_DESC13', 'crimePD_DESC14', 'sumCrimePD_DESC14', 'crimePD_DESC15', 'sumCrimePD_DESC15', 'crimePD_DESC16', 'sumCrimePD_DESC16', 'crimePD_DESC17', 'sumCrimePD_DESC17', 'crimePD_DESC18', 'sumCrimePD_DESC18', 'crimePD_DESC19', 'sumCrimePD_DESC19', 'crimePD_DESC20', 'sumCrimePD_DESC20', 'crimePD_DESC21', 'sumCrimePD_DESC21', 'crimePD_DESC22', 'sumCrimePD_DESC22', 'crimePD_DESC23', 'sumCrimePD_DESC23', 'crimePD_DESC24', 'sumCrimePD_DESC24', 'crimePD_DESC25', 'sumCrimePD_DESC25', 'crimePD_DESC26', 'sumCrimePD_DESC26', 'crimePD_DESC27', 'sumCrimePD_DESC27', 'crimePD_DESC28', 'sumCrimePD_DESC28', 'crimePD_DESC29', 'sumCrimePD_DESC29', 'crimePD_DESC30', 'sumCrimePD_DESC30', 'crimePD_DESC31', 'sumCrimePD_DESC31', 'crimePD_DESC32', 'sumCrimePD_DESC32', 'crimePD_DESC33', 'sumCrimePD_DESC33', 'crimePD_DESC34', 'sumCrimePD_DESC34', 'crimePD_DESC35', 'sumCrimePD_DESC35', 'crimePD_DESC36', 'sumCrimePD_DESC36', 'crimePD_DESC37', 'sumCrimePD_DESC37', 'crimePD_DESC38', 'sumCrimePD_DESC38', 'crimePD_DESC39', 'sumCrimePD_DESC39', 'crimePD_DESC40', 'sumCrimePD_DESC40', 'crimePD_DESC41', 'sumCrimePD_DESC41', 'crimePD_DESC42', 'sumCrimePD_DESC42', 'crimePD_DESC43', 'sumCrimePD_DESC43', 'crimePD_DESC44', 'sumCrimePD_DESC44', 'crimePD_DESC45', 'sumCrimePD_DESC45', 'crimePD_DESC46', 'sumCrimePD_DESC46', 'crimePD_DESC47', 'sumCrimePD_DESC47', 'crimePD_DESC48', 'sumCrimePD_DESC48', 'crimePD_DESC49', 'sumCrimePD_DESC49', 'crimePD_DESC50', 'sumCrimePD_DESC50', 'crimePD_DESC51', 'sumCrimePD_DESC51', 'crimePD_DESC52', 'sumCrimePD_DESC52', 'crimePD_DESC53', 'sumCrimePD_DESC53', 'crimePD_DESC54', 'sumCrimePD_DESC54', 'crimePD_DESC55', 'sumCrimePD_DESC55', 'crimePD_DESC56', 'sumCrimePD_DESC56', 'crimePD_DESC57', 'sumCrimePD_DESC57', 'crimePD_DESC58', 'sumCrimePD_DESC58', 'crimePD_DESC59', 'sumCrimePD_DESC59', 'crimePD_DESC60', 'sumCrimePD_DESC60', 'crimePD_DESC61', 'sumCrimePD_DESC61', 'crimePD_DESC62', 'sumCrimePD_DESC62', 'crimePD_DESC63', 'sumCrimePD_DESC63', 'crimePD_DESC64', 'sumCrimePD_DESC64', 'crimePD_DESC65', 'sumCrimePD_DESC65', 'crimePD_DESC66', 'sumCrimePD_DESC66', 'crimePD_DESC67', 'sumCrimePD_DESC67', 'crimePD_DESC68', 'sumCrimePD_DESC68', 'crimePD_DESC69', 'sumCrimePD_DESC69', 'crimePD_DESC70', 'sumCrimePD_DESC70', 'crimePD_DESC71', 'sumCrimePD_DESC71', 'crimePD_DESC72', 'sumCrimePD_DESC72', 'crimePD_DESC73', 'sumCrimePD_DESC73', 'crimePD_DESC74', 'sumCrimePD_DESC74', 'crimePD_DESC75', 'sumCrimePD_DESC75', 'crimePD_DESC76', 'sumCrimePD_DESC76', 'crimePD_DESC77', 'sumCrimePD_DESC77', 'crimePD_DESC78', 'sumCrimePD_DESC78', 'crimePD_DESC79', 'sumCrimePD_DESC79', 'crimePD_DESC80', 'sumCrimePD_DESC80', 'crimePD_DESC81', 'sumCrimePD_DESC81', 'crimePD_DESC82', 'sumCrimePD_DESC82', 'crimePD_DESC83', 'sumCrimePD_DESC83', 'crimePD_DESC84', 'sumCrimePD_DESC84', 'crimePD_DESC85', 'sumCrimePD_DESC85', 'crimePD_DESC86', 'sumCrimePD_DESC86', 'crimePD_DESC87', 'sumCrimePD_DESC87', 'crimePD_DESC88', 'sumCrimePD_DESC88', 'crimePD_DESC89', 'sumCrimePD_DESC89', 'crimePD_DESC90', 'sumCrimePD_DESC90', 'crimePD_DESC91', 'sumCrimePD_DESC91', 'crimePD_DESC92', 'sumCrimePD_DESC92', 'crimePD_DESC93', 'sumCrimePD_DESC93', 'crimePD_DESC94', 'sumCrimePD_DESC94', 'crimePD_DESC95', 'sumCrimePD_DESC95', 'crimePD_DESC96', 'sumCrimePD_DESC96', 'crimePD_DESC97', 'sumCrimePD_DESC97', 'crimePD_DESC98', 'sumCrimePD_DESC98', 'crimePD_DESC99', 'sumCrimePD_DESC99', 'crimePD_DESC100', 'sumCrimePD_DESC100', 'crimePD_DESC101', 'sumCrimePD_DESC101', 'crimePD_DESC102', 'sumCrimePD_DESC102', 'crimePD_DESC103', 'sumCrimePD_DESC103', 'crimePD_DESC104', 'sumCrimePD_DESC104', 'crimePD_DESC105', 'sumCrimePD_DESC105', 'crimePD_DESC106', 'sumCrimePD_DESC106', 'crimePD_DESC107', 'sumCrimePD_DESC107', 'crimePD_DESC108', 'sumCrimePD_DESC108', 'crimePD_DESC109', 'sumCrimePD_DESC109', 'crimePD_DESC110', 'sumCrimePD_DESC110', 'crimePD_DESC111', 'sumCrimePD_DESC111', 'crimePD_DESC112', 'sumCrimePD_DESC112', 'crimePD_DESC113', 'sumCrimePD_DESC113', 'crimePD_DESC114', 'sumCrimePD_DESC114', 'crimePD_DESC115', 'sumCrimePD_DESC115', 'crimePD_DESC116', 'sumCrimePD_DESC116', 'crimePD_DESC117', 'sumCrimePD_DESC117', 'crimePD_DESC118', 'sumCrimePD_DESC118', 'crimePD_DESC119', 'sumCrimePD_DESC119', 'crimePD_DESC120', 'sumCrimePD_DESC120', 'crimePD_DESC121', 'sumCrimePD_DESC121', 'crimePD_DESC122', 'sumCrimePD_DESC122', 'crimePD_DESC123', 'sumCrimePD_DESC123', 'crimePD_DESC124', 'sumCrimePD_DESC124', 'crimePD_DESC125', 'sumCrimePD_DESC125', 'crimePD_DESC126', 'sumCrimePD_DESC126', 'crimePD_DESC127', 'sumCrimePD_DESC127', 'crimePD_DESC128', 'sumCrimePD_DESC128', 'crimePD_DESC129', 'sumCrimePD_DESC129', 'crimePD_DESC130', 'sumCrimePD_DESC130', 'crimePD_DESC131', 'sumCrimePD_DESC131', 'crimePD_DESC132', 'sumCrimePD_DESC132', 'crimePD_DESC133', 'sumCrimePD_DESC133', 'crimePD_DESC134', 'sumCrimePD_DESC134', 'crimePD_DESC135', 'sumCrimePD_DESC135', 'crimePD_DESC136', 'sumCrimePD_DESC136', 'crimePD_DESC137', 'sumCrimePD_DESC137', 'crimePD_DESC138', 'sumCrimePD_DESC138', 'crimePD_DESC139', 'sumCrimePD_DESC139', 'crimePD_DESC140', 'sumCrimePD_DESC140', 'crimePD_DESC141', 'sumCrimePD_DESC141', 'crimePD_DESC142', 'sumCrimePD_DESC142', 'crimePD_DESC143', 'sumCrimePD_DESC143', 'crimePD_DESC144', 'sumCrimePD_DESC144', 'crimePD_DESC145', 'sumCrimePD_DESC145', 'crimePD_DESC146', 'sumCrimePD_DESC146', 'crimePD_DESC147', 'sumCrimePD_DESC147', 'crimePD_DESC148', 'sumCrimePD_DESC148', 'crimePD_DESC149', 'sumCrimePD_DESC149', 'crimePD_DESC150', 'sumCrimePD_DESC150', 'crimePD_DESC151', 'sumCrimePD_DESC151', 'crimePD_DESC152', 'sumCrimePD_DESC152', 'crimePD_DESC153', 'sumCrimePD_DESC153', 'crimePD_DESC154', 'sumCrimePD_DESC154', 'crimePD_DESC155', 'sumCrimePD_DESC155', 'crimePD_DESC156', 'sumCrimePD_DESC156', 'crimePD_DESC157', 'sumCrimePD_DESC157', 'crimePD_DESC158', 'sumCrimePD_DESC158', 'crimePD_DESC159', 'sumCrimePD_DESC159', 'crimePD_DESC160', 'sumCrimePD_DESC160', 'crimePD_DESC161', 'sumCrimePD_DESC161', 'crimePD_DESC162', 'sumCrimePD_DESC162', 'crimePD_DESC163', 'sumCrimePD_DESC163', 'crimePD_DESC164', 'sumCrimePD_DESC164', 'crimePD_DESC165', 'sumCrimePD_DESC165', 'crimePD_DESC166', 'sumCrimePD_DESC166', 'crimePD_DESC167', 'sumCrimePD_DESC167', 'crimePD_DESC168', 'sumCrimePD_DESC168', 'crimePD_DESC169', 'sumCrimePD_DESC169', 'crimePD_DESC170', 'sumCrimePD_DESC170', 'crimePD_DESC171', 'sumCrimePD_DESC171', 'crimePD_DESC172', 'sumCrimePD_DESC172', 'crimePD_DESC173', 'sumCrimePD_DESC173', 'crimePD_DESC174', 'sumCrimePD_DESC174', 'crimePD_DESC175', 'sumCrimePD_DESC175', 'crimePD_DESC176', 'sumCrimePD_DESC176', 'crimePD_DESC177', 'sumCrimePD_DESC177', 'crimePD_DESC178', 'sumCrimePD_DESC178', 'crimePD_DESC179', 'sumCrimePD_DESC179', 'crimePD_DESC180', 'sumCrimePD_DESC180', 'crimePD_DESC181', 'sumCrimePD_DESC181', 'crimePD_DESC182', 'sumCrimePD_DESC182', 'crimePD_DESC183', 'sumCrimePD_DESC183', 'crimePD_DESC184', 'sumCrimePD_DESC184', 'crimePD_DESC185', 'sumCrimePD_DESC185', 'crimePD_DESC186', 'sumCrimePD_DESC186', 'crimePD_DESC187', 'sumCrimePD_DESC187', 'crimePD_DESC188', 'sumCrimePD_DESC188', 'crimePD_DESC189', 'sumCrimePD_DESC189', 'crimePD_DESC190', 'sumCrimePD_DESC190', 'crimePD_DESC191', 'sumCrimePD_DESC191', 'crimePD_DESC192', 'sumCrimePD_DESC192', 'crimePD_DESC193', 'sumCrimePD_DESC193', 'crimePD_DESC194', 'sumCrimePD_DESC194', 'crimePD_DESC195', 'sumCrimePD_DESC195', 'crimePD_DESC196', 'sumCrimePD_DESC196', 'crimePD_DESC197', 'sumCrimePD_DESC197', 'crimePD_DESC198', 'sumCrimePD_DESC198', 'crimePD_DESC199', 'sumCrimePD_DESC199', 'crimePD_DESC200', 'sumCrimePD_DESC200', 'crimePD_DESC201', 'sumCrimePD_DESC201', 'crimePD_DESC202', 'sumCrimePD_DESC202', 'crimePD_DESC203', 'sumCrimePD_DESC203', 'crimePD_DESC204', 'sumCrimePD_DESC204', 'crimePD_DESC205', 'sumCrimePD_DESC205', 'crimePD_DESC206', 'sumCrimePD_DESC206', 'crimePD_DESC207', 'sumCrimePD_DESC207', 'crimePD_DESC208', 'sumCrimePD_DESC208', 'crimePD_DESC209', 'sumCrimePD_DESC209', 'crimePD_DESC210', 'sumCrimePD_DESC210', 'crimePD_DESC211', 'sumCrimePD_DESC211', 'crimePD_DESC212', 'sumCrimePD_DESC212', 'crimePD_DESC213', 'sumCrimePD_DESC213', 'crimePD_DESC214', 'sumCrimePD_DESC214', 'crimePD_DESC215', 'sumCrimePD_DESC215', 'crimePD_DESC216', 'sumCrimePD_DESC216', 'crimePD_DESC217', 'sumCrimePD_DESC217', 'crimePD_DESC218', 'sumCrimePD_DESC218', 'crimePD_DESC219', 'sumCrimePD_DESC219', 'crimePD_DESC220', 'sumCrimePD_DESC220', 'crimePD_DESC221', 'sumCrimePD_DESC221', 'crimePD_DESC222', 'sumCrimePD_DESC222', 'crimePD_DESC223', 'sumCrimePD_DESC223', 'crimePD_DESC224', 'sumCrimePD_DESC224', 'crimePD_DESC225', 'sumCrimePD_DESC225', 'crimePD_DESC226', 'sumCrimePD_DESC226', 'crimePD_DESC227', 'sumCrimePD_DESC227', 'crimePD_DESC228', 'sumCrimePD_DESC228', 'crimePD_DESC229', 'sumCrimePD_DESC229', 'crimePD_DESC230', 'sumCrimePD_DESC230', 'crimePD_DESC231', 'sumCrimePD_DESC231', 'crimePD_DESC232', 'sumCrimePD_DESC232', 'crimePD_DESC233', 'sumCrimePD_DESC233', 'crimePD_DESC234', 'sumCrimePD_DESC234', 'crimePD_DESC235', 'sumCrimePD_DESC235', 'crimePD_DESC236', 'sumCrimePD_DESC236', 'crimePD_DESC237', 'sumCrimePD_DESC237', 'crimePD_DESC238', 'sumCrimePD_DESC238', 'crimePD_DESC239', 'sumCrimePD_DESC239', 'crimePD_DESC240', 'sumCrimePD_DESC240', 'crimePD_DESC241', 'sumCrimePD_DESC241', 'crimePD_DESC242', 'sumCrimePD_DESC242', 'crimePD_DESC243', 'sumCrimePD_DESC243', 'crimePD_DESC244', 'sumCrimePD_DESC244', 'crimePD_DESC245', 'sumCrimePD_DESC245', 'crimePD_DESC246', 'sumCrimePD_DESC246', 'crimePD_DESC247', 'sumCrimePD_DESC247', 'crimePD_DESC248', 'sumCrimePD_DESC248', 'crimePD_DESC249', 'sumCrimePD_DESC249', 'crimePD_DESC250', 'sumCrimePD_DESC250', 'crimePD_DESC251', 'sumCrimePD_DESC251', 'crimePD_DESC252', 'sumCrimePD_DESC252', 'crimePD_DESC253', 'sumCrimePD_DESC253', 'crimePD_DESC254', 'sumCrimePD_DESC254', 'crimePD_DESC255', 'sumCrimePD_DESC255', 'crimePD_DESC256', 'sumCrimePD_DESC256', 'crimePD_DESC257', 'sumCrimePD_DESC257', 'crimePD_DESC258', 'sumCrimePD_DESC258', 'crimePD_DESC259', 'sumCrimePD_DESC259', 'crimePD_DESC260', 'sumCrimePD_DESC260', 'crimePD_DESC261', 'sumCrimePD_DESC261', 'crimePD_DESC262', 'sumCrimePD_DESC262', 'crimePD_DESC263', 'sumCrimePD_DESC263', 'crimePD_DESC264', 'sumCrimePD_DESC264', 'crimePD_DESC265', 'sumCrimePD_DESC265', 'crimePD_DESC266', 'sumCrimePD_DESC266', 'crimePD_DESC267', 'sumCrimePD_DESC267', 'crimePD_DESC268', 'sumCrimePD_DESC268', 'crimePD_DESC269', 'sumCrimePD_DESC269', 'crimePD_DESC270', 'sumCrimePD_DESC270', 'crimePD_DESC271', 'sumCrimePD_DESC271', 'crimePD_DESC272', 'sumCrimePD_DESC272', 'crimePD_DESC273', 'sumCrimePD_DESC273', 'crimePD_DESC274', 'sumCrimePD_DESC274', 'crimePD_DESC275', 'sumCrimePD_DESC275', 'crimePD_DESC276', 'sumCrimePD_DESC276', 'crimePD_DESC277', 'sumCrimePD_DESC277', 'crimePD_DESC278', 'sumCrimePD_DESC278', 'crimePD_DESC279', 'sumCrimePD_DESC279', 'crimePD_DESC280', 'sumCrimePD_DESC280', 'crimePD_DESC281', 'sumCrimePD_DESC281', 'crimePD_DESC282', 'sumCrimePD_DESC282', 'crimePD_DESC283', 'sumCrimePD_DESC283', 'crimePD_DESC284', 'sumCrimePD_DESC284', 'crimePD_DESC285', 'sumCrimePD_DESC285', 'crimePD_DESC286', 'sumCrimePD_DESC286', 'crimePD_DESC287', 'sumCrimePD_DESC287', 'crimePD_DESC288', 'sumCrimePD_DESC288', 'crimePD_DESC289', 'sumCrimePD_DESC289', 'crimePD_DESC290', 'sumCrimePD_DESC290', 'crimePD_DESC291', 'sumCrimePD_DESC291', 'crimePD_DESC292', 'sumCrimePD_DESC292', 'crimePD_DESC293', 'sumCrimePD_DESC293', 'crimePD_DESC294', 'sumCrimePD_DESC294', 'crimePD_DESC295', 'sumCrimePD_DESC295', 'crimePD_DESC296', 'sumCrimePD_DESC296', 'crimePD_DESC297', 'sumCrimePD_DESC297', 'crimePD_DESC298', 'sumCrimePD_DESC298', 'crimePD_DESC299', 'sumCrimePD_DESC299', 'crimePD_DESC300', 'sumCrimePD_DESC300', 'crimePD_DESC301', 'sumCrimePD_DESC301', 'crimePD_DESC302', 'sumCrimePD_DESC302', 'crimePD_DESC303', 'sumCrimePD_DESC303', 'crimePD_DESC304', 'sumCrimePD_DESC304', 'crimePD_DESC305', 'sumCrimePD_DESC305', 'crimePD_DESC306', 'sumCrimePD_DESC306', 'crimePD_DESC307', 'sumCrimePD_DESC307', 'crimePD_DESC308', 'sumCrimePD_DESC308', 'crimePD_DESC309', 'sumCrimePD_DESC309', 'crimePD_DESC310', 'sumCrimePD_DESC310', 'crimePD_DESC311', 'sumCrimePD_DESC311', 'crimePD_DESC312', 'sumCrimePD_DESC312', 'crimePD_DESC313', 'sumCrimePD_DESC313', 'crimePD_DESC314', 'sumCrimePD_DESC314', 'crimePD_DESC315', 'sumCrimePD_DESC315', 'crimePD_DESC316', 'sumCrimePD_DESC316', 'crimePD_DESC317', 'sumCrimePD_DESC317', 'crimePD_DESC318', 'sumCrimePD_DESC318', 'crimePD_DESC319', 'sumCrimePD_DESC319', 'crimePD_DESC320', 'sumCrimePD_DESC320', 'crimePD_DESC321', 'sumCrimePD_DESC321', 'crimePD_DESC322', 'sumCrimePD_DESC322', 'crimePD_DESC323', 'sumCrimePD_DESC323', 'crimePD_DESC324', 'sumCrimePD_DESC324', 'crimePD_DESC325', 'sumCrimePD_DESC325', 'crimePD_DESC326', 'sumCrimePD_DESC326', 'crimePD_DESC327', 'sumCrimePD_DESC327', 'crimePD_DESC328', 'sumCrimePD_DESC328', 'crimePD_DESC329', 'sumCrimePD_DESC329', 'crimePD_DESC330', 'sumCrimePD_DESC330', 'crimePD_DESC331', 'sumCrimePD_DESC331', 'crimePD_DESC332', 'sumCrimePD_DESC332', 'crimePD_DESC333', 'sumCrimePD_DESC333', 'crimePD_DESC334', 'sumCrimePD_DESC334', 'crimePD_DESC335', 'sumCrimePD_DESC335', 'crimePD_DESC336', 'sumCrimePD_DESC336', 'crimePD_DESC337', 'sumCrimePD_DESC337', 'crimePD_DESC338', 'sumCrimePD_DESC338', 'crimePD_DESC339', 'sumCrimePD_DESC339', 'crimePD_DESC340', 'sumCrimePD_DESC340', 'crimePD_DESC341', 'sumCrimePD_DESC341', 'crimePD_DESC342', 'sumCrimePD_DESC342', 'crimePD_DESC343', 'sumCrimePD_DESC343', 'crimePD_DESC344', 'sumCrimePD_DESC344', 'crimePD_DESC345', 'sumCrimePD_DESC345', 'crimePD_DESC346', 'sumCrimePD_DESC346', 'crimePD_DESC347', 'sumCrimePD_DESC347', 'crimePD_DESC348', 'sumCrimePD_DESC348', 'crimePD_DESC349', 'sumCrimePD_DESC349', 'crimePD_DESC350', 'sumCrimePD_DESC350', 'crimePD_DESC351', 'sumCrimePD_DESC351', 'crimePD_DESC352', 'sumCrimePD_DESC352', 'crimePD_DESC353', 'sumCrimePD_DESC353', 'crimePD_DESC354', 'sumCrimePD_DESC354', 'crimePD_DESC355', 'sumCrimePD_DESC355', 'crimePD_DESC356', 'sumCrimePD_DESC356', 'crimePD_DESC357', 'sumCrimePD_DESC357', 'crimePD_DESC358', 'sumCrimePD_DESC358', 'crimePD_DESC359', 'sumCrimePD_DESC359', 'crimePD_DESC360', 'sumCrimePD_DESC360', 'crimePD_DESC361', 'sumCrimePD_DESC361', 'crimePD_DESC362', 'sumCrimePD_DESC362', 'crimePD_DESC363', 'sumCrimePD_DESC363', 'crimePD_DESC364', 'sumCrimePD_DESC364', 'crimePD_DESC365', 'sumCrimePD_DESC365', 'crimePD_DESC366', 'sumCrimePD_DESC366', 'crimePD_DESC367', 'sumCrimePD_DESC367', 'crimePD_DESC368', 'sumCrimePD_DESC368', 'crimePD_DESC369', 'sumCrimePD_DESC369', 'crimePD_DESC370', 'sumCrimePD_DESC370', 'crimePD_DESC371', 'sumCrimePD_DESC371', 'crimePD_DESC372', 'sumCrimePD_DESC372', 'crimePD_DESC373', 'sumCrimePD_DESC373', 'crimePD_DESC374', 'sumCrimePD_DESC374', 'crimePD_DESC375', 'sumCrimePD_DESC375', 'crimePD_DESC376', 'sumCrimePD_DESC376', 'crimePD_DESC377', 'sumCrimePD_DESC377', 'crimePD_DESC378', 'sumCrimePD_DESC378', 'crimePD_DESC379', 'sumCrimePD_DESC379', 'crimePD_DESC380', 'sumCrimePD_DESC380', 'crimePD_DESC381', 'sumCrimePD_DESC381', 'crimePD_DESC382', 'sumCrimePD_DESC382', 'crimePD_DESC383', 'sumCrimePD_DESC383', 'crimePD_DESC384', 'sumCrimePD_DESC384', 'crimePD_DESC385', 'sumCrimePD_DESC385', 'crimePD_DESC386', 'sumCrimePD_DESC386', 'crimePD_DESC387', 'sumCrimePD_DESC387', 'crimePD_DESC388', 'sumCrimePD_DESC388', 'crimePD_DESC389', 'sumCrimePD_DESC389', 'crimePD_DESC390', 'sumCrimePD_DESC390', 'crimePD_DESC391', 'sumCrimePD_DESC391', 'crimePD_DESC392', 'sumCrimePD_DESC392', 'crimePD_DESC393', 'sumCrimePD_DESC393', 'crimePD_DESC394', 'sumCrimePD_DESC394', 'crimePD_DESC395', 'sumCrimePD_DESC395', 'crimePD_DESC396', 'sumCrimePD_DESC396', 'crimePD_DESC397', 'sumCrimePD_DESC397', 'crimePD_DESC398', 'sumCrimePD_DESC398', 'crimePD_DESC399', 'sumCrimePD_DESC399', 'crimePD_DESC400', 'sumCrimePD_DESC400', 'crimePD_DESC401', 'sumCrimePD_DESC401', 'crimePD_DESC402', 'sumCrimePD_DESC402', 'crimePD_DESC403', 'sumCrimePD_DESC403', 'crimePD_DESC404', 'sumCrimePD_DESC404', 'crimePD_DESC405', 'sumCrimePD_DESC405', 'crimePD_DESC406', 'sumCrimePD_DESC406', 'crimePD_DESC407', 'sumCrimePD_DESC407', 'crimePD_DESC408', 'sumCrimePD_DESC408', 'crimePD_DESC409', 'sumCrimePD_DESC409', 'crimePD_DESC410', 'sumCrimePD_DESC410', 'crimePD_DESC411', 'sumCrimePD_DESC411', 'crimePD_DESC412', 'sumCrimePD_DESC412', 'crimePD_DESC413', 'sumCrimePD_DESC413', 'crimePD_DESC414', 'sumCrimePD_DESC414', 'crimePREM_TYPE_DESC1', 'sumCrimePREM_TYPE_DESC1', 'crimePREM_TYPE_DESC2', 'sumCrimePREM_TYPE_DESC2', 'crimePREM_TYPE_DESC3', 'sumCrimePREM_TYPE_DESC3', 'crimePREM_TYPE_DESC4', 'sumCrimePREM_TYPE_DESC4', 'crimePREM_TYPE_DESC5', 'sumCrimePREM_TYPE_DESC5', 'crimePREM_TYPE_DESC6', 'sumCrimePREM_TYPE_DESC6', 'crimePREM_TYPE_DESC7', 'sumCrimePREM_TYPE_DESC7', 'crimePREM_TYPE_DESC8', 'sumCrimePREM_TYPE_DESC8', 'crimePREM_TYPE_DESC9', 'sumCrimePREM_TYPE_DESC9', 'crimePREM_TYPE_DESC10', 'sumCrimePREM_TYPE_DESC10', 'crimePREM_TYPE_DESC11', 'sumCrimePREM_TYPE_DESC11', 'crimePREM_TYPE_DESC12', 'sumCrimePREM_TYPE_DESC12', 'crimePREM_TYPE_DESC13', 'sumCrimePREM_TYPE_DESC13', 'crimePREM_TYPE_DESC14', 'sumCrimePREM_TYPE_DESC14', 'crimePREM_TYPE_DESC15', 'sumCrimePREM_TYPE_DESC15', 'crimePREM_TYPE_DESC16', 'sumCrimePREM_TYPE_DESC16', 'crimePREM_TYPE_DESC17', 'sumCrimePREM_TYPE_DESC17', 'crimePREM_TYPE_DESC18', 'sumCrimePREM_TYPE_DESC18', 'crimePREM_TYPE_DESC19', 'sumCrimePREM_TYPE_DESC19', 'crimePREM_TYPE_DESC20', 'sumCrimePREM_TYPE_DESC20', 'crimePREM_TYPE_DESC21', 'sumCrimePREM_TYPE_DESC21', 'crimePREM_TYPE_DESC22', 'sumCrimePREM_TYPE_DESC22', 'crimePREM_TYPE_DESC23', 'sumCrimePREM_TYPE_DESC23', 'crimePREM_TYPE_DESC24', 'sumCrimePREM_TYPE_DESC24', 'crimePREM_TYPE_DESC25', 'sumCrimePREM_TYPE_DESC25', 'crimePREM_TYPE_DESC26', 'sumCrimePREM_TYPE_DESC26', 'crimePREM_TYPE_DESC27', 'sumCrimePREM_TYPE_DESC27', 'crimePREM_TYPE_DESC28', 'sumCrimePREM_TYPE_DESC28', 'crimePREM_TYPE_DESC29', 'sumCrimePREM_TYPE_DESC29', 'crimePREM_TYPE_DESC30', 'sumCrimePREM_TYPE_DESC30', 'crimePREM_TYPE_DESC31', 'sumCrimePREM_TYPE_DESC31', 'crimePREM_TYPE_DESC32', 'sumCrimePREM_TYPE_DESC32', 'crimePREM_TYPE_DESC33', 'sumCrimePREM_TYPE_DESC33', 'crimePREM_TYPE_DESC34', 'sumCrimePREM_TYPE_DESC34', 'crimePREM_TYPE_DESC35', 'sumCrimePREM_TYPE_DESC35', 'crimePREM_TYPE_DESC36', 'sumCrimePREM_TYPE_DESC36', 'crimePREM_TYPE_DESC37', 'sumCrimePREM_TYPE_DESC37', 'crimePREM_TYPE_DESC38', 'sumCrimePREM_TYPE_DESC38', 'crimePREM_TYPE_DESC39', 'sumCrimePREM_TYPE_DESC39', 'crimePREM_TYPE_DESC40', 'sumCrimePREM_TYPE_DESC40', 'crimePREM_TYPE_DESC41', 'sumCrimePREM_TYPE_DESC41', 'crimePREM_TYPE_DESC42', 'sumCrimePREM_TYPE_DESC42', 'crimePREM_TYPE_DESC43', 'sumCrimePREM_TYPE_DESC43', 'crimePREM_TYPE_DESC44', 'sumCrimePREM_TYPE_DESC44', 'crimePREM_TYPE_DESC45', 'sumCrimePREM_TYPE_DESC45', 'crimePREM_TYPE_DESC46', 'sumCrimePREM_TYPE_DESC46', 'crimePREM_TYPE_DESC47', 'sumCrimePREM_TYPE_DESC47', 'crimePREM_TYPE_DESC48', 'sumCrimePREM_TYPE_DESC48', 'crimePREM_TYPE_DESC49', 'sumCrimePREM_TYPE_DESC49', 'crimePREM_TYPE_DESC50', 'sumCrimePREM_TYPE_DESC50', 'crimePREM_TYPE_DESC51', 'sumCrimePREM_TYPE_DESC51', 'crimePREM_TYPE_DESC52', 'sumCrimePREM_TYPE_DESC52', 'crimePREM_TYPE_DESC53', 'sumCrimePREM_TYPE_DESC53', 'crimePREM_TYPE_DESC54', 'sumCrimePREM_TYPE_DESC54', 'crimePREM_TYPE_DESC55', 'sumCrimePREM_TYPE_DESC55', 'crimePREM_TYPE_DESC56', 'sumCrimePREM_TYPE_DESC56', 'crimePREM_TYPE_DESC57', 'sumCrimePREM_TYPE_DESC57', 'crimePREM_TYPE_DESC58', 'sumCrimePREM_TYPE_DESC58', 'crimePREM_TYPE_DESC59', 'sumCrimePREM_TYPE_DESC59', 'crimePREM_TYPE_DESC60', 'sumCrimePREM_TYPE_DESC60', 'crimePREM_TYPE_DESC61', 'sumCrimePREM_TYPE_DESC61', 'crimePREM_TYPE_DESC62', 'sumCrimePREM_TYPE_DESC62', 'crimePREM_TYPE_DESC63', 'sumCrimePREM_TYPE_DESC63', 'crimePREM_TYPE_DESC64', 'sumCrimePREM_TYPE_DESC64', 'crimePREM_TYPE_DESC65', 'sumCrimePREM_TYPE_DESC65', 'crimePREM_TYPE_DESC66', 'sumCrimePREM_TYPE_DESC66', 'crimePREM_TYPE_DESC67', 'sumCrimePREM_TYPE_DESC67', 'crimePREM_TYPE_DESC68', 'sumCrimePREM_TYPE_DESC68', 'crimePREM_TYPE_DESC69', 'sumCrimePREM_TYPE_DESC69', 'crimePREM_TYPE_DESC70', 'sumCrimePREM_TYPE_DESC70', 'crimePREM_TYPE_DESC71', 'sumCrimePREM_TYPE_DESC71', 'crimePREM_TYPE_DESC72', 'sumCrimePREM_TYPE_DESC72', 'crimeLAW_CAT_CD1', 'sumCrimeLAW_CAT_CD1', 'crimeLAW_CAT_CD2', 'sumCrimeLAW_CAT_CD2', 'crimeLAW_CAT_CD3', 'sumCrimeLAW_CAT_CD3' ]

### ----------------- FUNCTION DEFINITIONS START ------------- ###
def processDbEntriesAndWriteDataToOutputFile():
    global outputCSVfile, countTotalRowsWrittenToOutputFile
    with open(outputCSVfile, 'a', newline='') as opCsvFile:
        mywriter = csv.writer(opCsvFile) #, quotechar='"')
        # setup mongo database access parameters
        client = MongoClient('localhost:27017')
        database = client['db1story']
        coll1CrimeData = database['coll1nyccrimedata']
        coll2PedesData = database['coll2pedesdata']
        coll3PortData = database['coll3portsdata']
        
        for currPedesBoroBeingProcessed in arrPedesDbBoroughNames:
            for currPedesYearBeingProcessed in arrPedesYear:
                for currPedesMonthBeingProcessed in arrPedesMonth:
                    print(f"\n\n*** **** **** ****\nProcessing for:\nYear={currPedesYearBeingProcessed}\tMonth={currPedesMonthBeingProcessed}\t\tBoro={currPedesBoroBeingProcessed}")
                    logging.warning(f"\n\n*** **** **** ****\nProcessing for:\nYear={currPedesYearBeingProcessed}\tMonth={currPedesMonthBeingProcessed}\t\tBoro={currPedesBoroBeingProcessed}")
                    
                    rowDataToWrite = []
                    rowDataToWrite.append(currPedesYearBeingProcessed)
                    rowDataToWrite.append(currPedesMonthBeingProcessed)
                    rowDataToWrite.append(currPedesBoroBeingProcessed)

                    # read the count of pedestrians and store it  -- pipeline 1
                    # -- db.coll2pedesdata.aggregate([ {"$match": {"year": 2007, "month": 5, "boroughBridgeName": "Queens"} } , {"$group": {"_id": 1, "TotalPedesCount": {"$sum": "$count"}}} ]) --- shows 199427 count of pedes summed
                    pipeline1 = [ {"$match": {"year": 0, "month": 0, "boroughBridgeName": "garbage"} } , {"$group": {"_id": 1, "TotalPedesCount": {"$sum": "$count"}}} ]
                    pipeline1[0]['$match']['year'] = currPedesYearBeingProcessed
                    pipeline1[0]['$match']['month'] = currPedesMonthBeingProcessed
                    pipeline1[0]['$match']['boroughBridgeName'] = currPedesBoroBeingProcessed
                    cursorTotalPedesCount = coll2PedesData.aggregate(pipeline1)
                    for cursor in cursorTotalPedesCount:
                        #print(f"     entered for cursor\t cursor={cursor}")
                        logging.warning(f"     entered for cursor\t cursor={cursor}")
                        rowDataToWrite.append(cursor["TotalPedesCount"])
                    cursorTotalPedesCount.close()
                    print(f"Cur 1 done")
                    logging.warning(f"Cur 1 done")
                    
                    # process the ports data  -- pipeline 2
                    # setup and read the port passenger entry count and store it
                    # -- db.coll3portsdata.aggregate([ {"$match": {"portName": "new york", "year" : 2007, "month" : 5} } ]) --- get the document for May'2007
                    for currPortBeingProcessed in arrPortsDbPortNames:
                        #print(f"     entered for cursor\t cursor={cursor}")
                        logging.warning(f"     entered for cursor\t cursor={cursor}")
                        pipeline2 = [ {"$match": {"portName": "garbage", "year" : 0, "month" : 0} } ]
                        pipeline2[0]['$match']['year'] = currPedesYearBeingProcessed
                        pipeline2[0]['$match']['month'] = currPedesMonthBeingProcessed
                        pipeline2[0]['$match']['portName'] = currPortBeingProcessed
                        rowDataToWrite.append(currPortBeingProcessed)
                        cursorTotalPortEntryCount = coll3PortData.aggregate(pipeline2)
                        for cursor in cursorTotalPortEntryCount:
                            #print(f"     entered for cursor\t cursor={cursor}")
                            rowDataToWrite.append(cursor["count"])
                        cursorTotalPortEntryCount.close()
                    print(f"Cur 2 done")
                    logging.warning(f"Cur 2 done")
                    
                    # process for the total count of crimes in the month, year, boro and store it  -- pipeline 3
                    # setup process total crimes count for the month, year, boro
                    # -- db.coll1nyccrimedata.find({"BORO_NM": "QUEENS", "CMPLNT_FR_DT": {$regex: /^05[/][0-9]{2}[/]2007$/}}).count()   -- gave answer 9214
                    # -- db.coll1nyccrimedata.aggregate([ {"$match": {"BORO_NM": "QUEENS", "CMPLNT_FR_DT": {$regex: /^05[/][0-9]{2}[/]2007$/} } } , {"$group": {"_id": 1, "TotalCrimesForMonthYearBoro": {"$sum": 1}}} ])  -- gave answer { "_id" : 1, "TotalCrimesForMonthYearBoro" : 9214 }
                    pipeline3 = [ {"$match": {"BORO_NM": "garbage", "CMPLNT_FR_DT": {"$regex": "garbage"} } } , {"$group": {"_id": 1, "TotalCrimesForMonthYearBoro": {"$sum": 1}}} ]
                    newRegexString = '^' + str(currPedesMonthBeingProcessed).zfill(2) + '[/][0-9]{2}[/]' + str(currPedesYearBeingProcessed) + '$'
                    #print(f"\nnewRegexString=\n{newRegexString}")
                    #print(f"before pipeline3=\n{pipeline3}")
                    pipeline3[0]['$match']['CMPLNT_FR_DT']['$regex'] = newRegexString
                    pipeline3[0]['$match']['BORO_NM'] = currPedesBoroBeingProcessed.upper()
                    #print(f"query pipeline3=\n{pipeline3}")
                    cursorTotalCrimesInMonthYearBoroCount = coll1CrimeData.aggregate(pipeline3)
                    for cursor in cursorTotalCrimesInMonthYearBoroCount:
                        #print(f"     entered for cursor\t cursor={cursor}")
                        rowDataToWrite.append(cursor["TotalCrimesForMonthYearBoro"])
                    cursorTotalCrimesInMonthYearBoroCount.close()
                    print(f"Cur 3 done")
                    logging.warning(f"Cur 3 done")
                    
                    # process the KY_CD data and store it  -- pipeline 4
                    # setup and process for month, year, boro and KY_CD and store it
                    # db.coll1nyccrimedata.aggregate([ {"$match": {"KY_CD": 106, "BORO_NM": "QUEENS", "CMPLNT_FR_DT": {"$regex": "^05[/][0-9]{2}[/]2007$" } } } , {"$group": {"_id": 1, "TotalCrimesForKY_CDForMonthYearBoro": {"$sum": 1}}} ]) --- get the document for May'2007, specific boro, for the specific KY_CD   -- get answer = { "_id" : 1, "TotalCrimesForKY_CDForMonthYearBoro" : 324 }
                    # db.coll1nyccrimedata.aggregate( [ {"$match": {"KY_CD": 106, "BORO_NM": "QUEENS", "CMPLNT_FR_DT": {"$regex": "^05[/][0-9]{2}[/]2007$" } } } , {"$group": {"_id": 1, "TotalCrimesForKY_CDForMonthYearBoro": {"$sum": 1}}} ] )
                    # db.coll1nyccrimedata.distinct("BORO_NM", {"KY_CD": 106, "CMPLNT_FR_DT": {$regex: '^05[/][0-9]{2}[/]2007$' } })  -- [ "QUEENS", "BROOKLYN", "MANHATTAN", "BRONX", null, "STATEN ISLAND" ]
                    for currKY_CDBeingProcessed in arrKY_CD:
                        #print(f"\nProcessing for:\nKY_CD={currKY_CDBeingProcessed}")
                        logging.warning(f"\nProcessing for:\nKY_CD={currKY_CDBeingProcessed}")
                        pipeline4 = [ {"$match": {"KY_CD": 0, "BORO_NM": "garbage", "CMPLNT_FR_DT": {"$regex": "garbage" } } } , {"$group": {"_id": 1, "TotalCrimesForKY_CDForMonthYearBoro": {"$sum": 1}}} ]
                        newRegexString = '^' + str(currPedesMonthBeingProcessed).zfill(2) + '[/][0-9]{2}[/]' + str(currPedesYearBeingProcessed) + '$'
                        pipeline4[0]['$match']['CMPLNT_FR_DT']['$regex'] = newRegexString
                        pipeline4[0]['$match']['BORO_NM'] = currPedesBoroBeingProcessed.upper()
                        pipeline4[0]['$match']['KY_CD'] = currKY_CDBeingProcessed
                        #print(f"query pipeline4=\n{pipeline4}")
                        rowDataToWrite.append(currKY_CDBeingProcessed)
                        cursorTotalCrimesInKY_CDMonthYearBoroCount = coll1CrimeData.aggregate(pipeline4)
                        toAppendValue = 0
                        for cursor in cursorTotalCrimesInKY_CDMonthYearBoroCount:
                            #print(f"     entered for cursor\t cursor={cursor}")
                            logging.warning(f"     entered for cursor\t cursor={cursor}")
                            try:
                                toAppendValue = cursor["TotalCrimesForKY_CDForMonthYearBoro"]
                            except KeyError:
                                #print(f"\n\t\tKeyError for KY_CD={currKY_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                #print(f"\t\tSo inserted 0 for the crime count and continued.")
                                logging.warning(f"\n\t\tKeyError for KY_CD={currKY_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.warning(f"\n\t\tSo inserted 0 for the crime count and continued.")
                                toAppendValue = 0
                            except Exception as e:
                                cursorTotalCrimesInKY_CDMonthYearBoroCount.close()
                                print(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for KY_CD={currKY_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                print(f"ERROR: Error details = {e}")
                                logging.error(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for KY_CD={currKY_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.error(f"ERROR: Error details = {e}")
                                return(204)
                        cursorTotalCrimesInKY_CDMonthYearBoroCount.close()
                        rowDataToWrite.append(toAppendValue)
                    print(f"Cur 4 done")
                    logging.warning(f"Cur 4 done")
                    
                    # process the OFNS_DESC data and store it -- pipeline 5
                    # setup and process for month, year, boro and OFNS_DESC and store it
                    # db.coll1nyccrimedata.aggregate([ {"$match": {"OFNS_DESC": "FELONY ASSAULT", "BORO_NM": "QUEENS", "CMPLNT_FR_DT": {"$regex": "^05[/][0-9]{2}[/]2007$" } } } , {"$group": {"_id": 1, "TotalCrimesForOFNS_DESCForMonthYearBoro": {"$sum": 1}}} ]) --- get the document for May'2007, specific boro, for the specific OFNS_DESC   -- get answer = { "_id" : 1, "TotalCrimesForOFNS_DESCForMonthYearBoro" : 324 }
                    # db.coll1nyccrimedata.distinct("OFNS_DESC", {"BORO_NM": "QUEENS", "CMPLNT_FR_DT": {$regex: '^05[/][0-9]{2}[/]2007$' } })  -- answer = arrOFNS_DESC = ['FELONY ASSAULT', 'HARRASSMENT 2', 'BURGLARY', and more items totalling to 40 approx ]
                    for currOFNS_DESCBeingProcessed in arrOFNS_DESC:
                        #print(f"\nProcessing for:\nOFNS_DESC={currOFNS_DESCBeingProcessed}")
                        logging.warning(f"\nProcessing for:\nOFNS_DESC={currOFNS_DESCBeingProcessed}")
                        pipeline5 = [ {"$match": {"OFNS_DESC": "garbage", "BORO_NM": "garbage", "CMPLNT_FR_DT": {"$regex": "garbage" } } } , {"$group": {"_id": 1, "TotalCrimesForOFNS_DESCForMonthYearBoro": {"$sum": 1}}} ]
                        newRegexString = '^' + str(currPedesMonthBeingProcessed).zfill(2) + '[/][0-9]{2}[/]' + str(currPedesYearBeingProcessed) + '$'
                        pipeline5[0]['$match']['CMPLNT_FR_DT']['$regex'] = newRegexString
                        pipeline5[0]['$match']['BORO_NM'] = currPedesBoroBeingProcessed.upper()
                        pipeline5[0]['$match']['OFNS_DESC'] = currOFNS_DESCBeingProcessed
                        #print(f"query pipeline5=\n{pipeline5}")
                        rowDataToWrite.append(currOFNS_DESCBeingProcessed)
                        cursorTotalCrimesInOFNS_DESCMonthYearBoroCount = coll1CrimeData.aggregate(pipeline5)
                        toAppendValue = 0
                        for cursor in cursorTotalCrimesInOFNS_DESCMonthYearBoroCount:
                            #print(f"     entered for cursor\t cursor={cursor}")
                            logging.warning(f"     entered for cursor\t cursor={cursor}")
                            try:
                                toAppendValue = cursor["TotalCrimesForOFNS_DESCForMonthYearBoro"]
                            except KeyError:
                                #print(f"\n\t\tKeyError for OFNS_DESC={currOFNS_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                #print(f"\t\tSo inserted 0 for the crime count and continued.")
                                logging.warning(f"\n\t\tKeyError for OFNS_DESC={currOFNS_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.warning(f"\n\t\tSo inserted 0 for the crime count and continued.")
                                toAppendValue = 0
                            except Exception as e:
                                cursorTotalCrimesInOFNS_DESCMonthYearBoroCount.close()
                                print(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for OFNS_DESC={currOFNS_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                print(f"ERROR: Error details = {e}")
                                logging.error(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for OFNS_DESC={currOFNS_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.error(f"ERROR: Error details = {e}")
                                return(205)
                        cursorTotalCrimesInOFNS_DESCMonthYearBoroCount.close()
                        rowDataToWrite.append(toAppendValue)
                    print(f"Cur 5 done")
                    logging.warning(f"Cur 5 done")

                    # process the PD_CD data and store it -- pipeline 6
                    # setup and process for month, year, boro and PD_CD and store it
                    # db.coll1nyccrimedata.aggregate([ {"$match": {"PD_CD": 109, "BORO_NM": "QUEENS", "CMPLNT_FR_DT": {"$regex": "^05[/][0-9]{2}[/]2007$" } } } , {"$group": {"_id": 1, "TotalCrimesForPD_CDForMonthYearBoro": {"$sum": 1}}} ]) --- get the document for May'2007, specific boro, for the specific PD_CD   -- get answer = { "_id" : 1, "TotalCrimesForPD_CDForMonthYearBoro" : 282 }
                    # db.coll1nyccrimedata.distinct("PD_CD", {"BORO_NM": "QUEENS", "CMPLNT_FR_DT": {$regex: '^05[/][0-9]{2}[/]2007$' } })  -- answer = [ 109, 637, 638, 223, and many more items ]
                    for currPD_CDBeingProcessed in arrPD_CD:
                        #print(f"\nProcessing for:\nPD_CD={currPD_CDBeingProcessed}")
                        logging.warning(f"\nProcessing for:\nPD_CD={currPD_CDBeingProcessed}")
                        pipeline6 = [ {"$match": {"PD_CD": 0, "BORO_NM": "garbage", "CMPLNT_FR_DT": {"$regex": "garbage" } } } , {"$group": {"_id": 1, "TotalCrimesForPD_CDForMonthYearBoro": {"$sum": 1}}} ]
                        newRegexString = '^' + str(currPedesMonthBeingProcessed).zfill(2) + '[/][0-9]{2}[/]' + str(currPedesYearBeingProcessed) + '$'
                        pipeline6[0]['$match']['CMPLNT_FR_DT']['$regex'] = newRegexString
                        pipeline6[0]['$match']['BORO_NM'] = currPedesBoroBeingProcessed.upper()
                        pipeline6[0]['$match']['PD_CD'] = currPD_CDBeingProcessed
                        #print(f"query pipeline6=\n{pipeline6}")
                        rowDataToWrite.append(currPD_CDBeingProcessed)
                        cursorTotalCrimesInPD_CDMonthYearBoroCount = coll1CrimeData.aggregate(pipeline6)
                        toAppendValue = 0
                        for cursor in cursorTotalCrimesInPD_CDMonthYearBoroCount:
                            #print(f"     entered for cursor\t cursor={cursor}")
                            logging.warning(f"     entered for cursor\t cursor={cursor}")
                            try:
                                toAppendValue = cursor["TotalCrimesForPD_CDForMonthYearBoro"]
                            except KeyError:
                                #print(f"\n\t\tKeyError for PD_CD={currPD_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                #print(f"\t\tSo inserted 0 for the crime count and continued.")
                                logging.warning(f"\n\t\tKeyError for PD_CD={currPD_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.warning(f"\n\t\tSo inserted 0 for the crime count and continued.")
                                toAppendValue = 0
                            except Exception as e:
                                cursorTotalCrimesInPD_CDMonthYearBoroCount.close()
                                print(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for PD_CD={currPD_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                print(f"ERROR: Error details = {e}")
                                logging.error(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for PD_CD={currPD_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.error(f"ERROR: Error details = {e}")
                                return(206)
                        cursorTotalCrimesInPD_CDMonthYearBoroCount.close()
                        rowDataToWrite.append(toAppendValue)
                    print(f"Cur 6 done")
                    logging.warning(f"Cur 6 done")

                    # process the PD_DESC data and store it -- pipeline 7
                    # setup and process for month, year, boro and PD_DESC and store it
                    # db.coll1nyccrimedata.aggregate([ {"$match": {"PD_DESC": "ASSAULT 2,1,UNCLASSIFIED", "BORO_NM": "QUEENS", "CMPLNT_FR_DT": {"$regex": "^05[/][0-9]{2}[/]2007$" } } } , {"$group": {"_id": 1, "TotalCrimesForPD_DESCForMonthYearBoro": {"$sum": 1}}} ]) --- get the document for May'2007, specific boro, for the specific PD_DESC   -- get answer = { "_id" : 1, "TotalCrimesForPD_DESCForMonthYearBoro" : 282 }
                    # db.coll1nyccrimedata.distinct("PD_DESC", {"BORO_NM": "QUEENS", "CMPLNT_FR_DT": {$regex: '^05[/][0-9]{2}[/]2007$' } })  -- answer = [ "ASSAULT 2,1,UNCLASSIFIED", "HARASSMENT,SUBD 1,CIVILIAN", "BURGLARY,RESIDENCE,NIGHT", and many more items ]
                    for currPD_DESCBeingProcessed in arrPD_DESC:
                        #print(f"\nProcessing for:\nPD_DESC={currPD_DESCBeingProcessed}")
                        logging.warning(f"\nProcessing for:\nPD_DESC={currPD_DESCBeingProcessed}")
                        pipeline7 = [ {"$match": {"PD_DESC": "garbage", "BORO_NM": "garbage", "CMPLNT_FR_DT": {"$regex": "garbage" } } } , {"$group": {"_id": 1, "TotalCrimesForPD_DESCForMonthYearBoro": {"$sum": 1}}} ]
                        newRegexString = '^' + str(currPedesMonthBeingProcessed).zfill(2) + '[/][0-9]{2}[/]' + str(currPedesYearBeingProcessed) + '$'
                        pipeline7[0]['$match']['CMPLNT_FR_DT']['$regex'] = newRegexString
                        pipeline7[0]['$match']['BORO_NM'] = currPedesBoroBeingProcessed.upper()
                        pipeline7[0]['$match']['PD_DESC'] = currPD_DESCBeingProcessed
                        #print(f"query pipeline7=\n{pipeline7}")
                        rowDataToWrite.append(currPD_DESCBeingProcessed)
                        cursorTotalCrimesInPD_DESCMonthYearBoroCount = coll1CrimeData.aggregate(pipeline7)
                        toAppendValue = 0
                        for cursor in cursorTotalCrimesInPD_DESCMonthYearBoroCount:
                            #print(f"     entered for cursor\t cursor={cursor}")
                            logging.warning(f"     entered for cursor\t cursor={cursor}")
                            try:
                                toAppendValue = cursor["TotalCrimesForPD_DESCForMonthYearBoro"]
                            except KeyError:
                                #print(f"\n\t\tKeyError for PD_DESC={currPD_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                #print(f"\t\tSo inserted 0 for the crime count and continued.")
                                logging.warning(f"\n\t\tKeyError for PD_DESC={currPD_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.warning(f"\n\t\tSo inserted 0 for the crime count and continued.")
                                toAppendValue = 0
                            except Exception as e:
                                cursorTotalCrimesInPD_DESCMonthYearBoroCount.close()
                                print(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for PD_DESC={currPD_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                print(f"ERROR: Error details = {e}")
                                logging.error(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for PD_DESC={currPD_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.error(f"ERROR: Error details = {e}")
                                return(207)
                        cursorTotalCrimesInPD_DESCMonthYearBoroCount.close()
                        rowDataToWrite.append(toAppendValue)
                    print(f"Cur 7 done")
                    logging.warning(f"Cur 7 done")
                    
                    # process the PREM_TYP_DESC data and store it -- pipeline 8
                    # setup and process for month, year, boro and PREM_TYP_DESC and store it
                    # db.coll1nyccrimedata.aggregate([ {"$match": {"PREM_TYP_DESC": "STREET", "BORO_NM": "QUEENS", "CMPLNT_FR_DT": {"$regex": "^05[/][0-9]{2}[/]2007$" } } } , {"$group": {"_id": 1, "TotalCrimesForPREM_TYP_DESCForMonthYearBoro": {"$sum": 1}}} ]) --- get the document for May'2007, specific boro, for the specific PREM_TYP_DESC   -- get answer = { "_id" : 1, "TotalCrimesForPREM_TYP_DESCForMonthYearBoro" : 3159 }
                    # db.coll1nyccrimedata.distinct("PREM_TYP_DESC", {"BORO_NM": "QUEENS", "CMPLNT_FR_DT": {$regex: '^05[/][0-9]{2}[/]2007$' } })  -- answer = ["BAR/NIGHT CLUB", "STREET", "RESIDENCE-HOUSE", and many more items ]
                    for currPREM_TYP_DESCBeingProcessed in arrPREM_DESC_TYPE:
                        #print(f"\nProcessing for:\nPREM_TYP_DESC={currPREM_TYP_DESCBeingProcessed}")
                        logging.warning(f"\nProcessing for:\nPREM_TYP_DESC={currPREM_TYP_DESCBeingProcessed}")
                        pipeline8 = [ {"$match": {"PREM_TYP_DESC": "garbage", "BORO_NM": "garbage", "CMPLNT_FR_DT": {"$regex": "garbage" } } } , {"$group": {"_id": 1, "TotalCrimesForPREM_TYP_DESCForMonthYearBoro": {"$sum": 1}}} ]
                        newRegexString = '^' + str(currPedesMonthBeingProcessed).zfill(2) + '[/][0-9]{2}[/]' + str(currPedesYearBeingProcessed) + '$'
                        pipeline8[0]['$match']['CMPLNT_FR_DT']['$regex'] = newRegexString
                        pipeline8[0]['$match']['BORO_NM'] = currPedesBoroBeingProcessed.upper()
                        pipeline8[0]['$match']['PREM_TYP_DESC'] = currPREM_TYP_DESCBeingProcessed
                        #print(f"query pipeline8=\n{pipeline8}")
                        rowDataToWrite.append(currPREM_TYP_DESCBeingProcessed)
                        cursorTotalCrimesInPREM_TYP_DESCMonthYearBoroCount = coll1CrimeData.aggregate(pipeline8)
                        toAppendValue = 0
                        for cursor in cursorTotalCrimesInPREM_TYP_DESCMonthYearBoroCount:
                            #print(f"     entered for cursor\t cursor={cursor}")
                            logging.warning(f"     entered for cursor\t cursor={cursor}")
                            try:
                                toAppendValue = cursor["TotalCrimesForPREM_TYP_DESCForMonthYearBoro"]
                            except KeyError:
                                #print(f"\n\t\tKeyError for PREM_TYP_DESC={currPREM_TYP_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                #print(f"\t\tSo inserted 0 for the crime count and continued.")
                                logging.warning(f"\n\t\tKeyError for PREM_TYP_DESC={currPREM_TYP_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.warning(f"\n\t\tSo inserted 0 for the crime count and continued.")
                                toAppendValue = 0
                            except Exception as e:
                                cursorTotalCrimesInPREM_TYP_DESCMonthYearBoroCount.close()
                                print(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for PREM_TYP_DESC={currPREM_TYP_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                print(f"ERROR: Error details = {e}")
                                logging.error(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for PREM_TYP_DESC={currPREM_TYP_DESCBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.error(f"ERROR: Error details = {e}")
                                return(208)
                        cursorTotalCrimesInPREM_TYP_DESCMonthYearBoroCount.close()
                        rowDataToWrite.append(toAppendValue)
                    print(f"Cur 8 done")
                    logging.warning(f"Cur 8 done")
                    
                    # process the LAW_CAT_CD data and store it -- pipeline 9
                    # setup and process for month, year, boro and LAW_CAT_CD and store it
                    # db.coll1nyccrimedata.aggregate([ {"$match": {"LAW_CAT_CD": "FELONY", "BORO_NM": "QUEENS", "CMPLNT_FR_DT": {"$regex": "^05[/][0-9]{2}[/]2007$" } } } , {"$group": {"_id": 1, "TotalCrimesForLAW_CAT_CDForMonthYearBoro": {"$sum": 1}}} ]) --- get the document for May'2007, specific boro, for the specific LAW_CAT_CD   -- get answer = { "_id" : 1, "TotalCrimesForLAW_CAT_CDForMonthYearBoro" : 3006 }
                    # db.coll1nyccrimedata.distinct("LAW_CAT_CD", {"BORO_NM": "QUEENS", "CMPLNT_FR_DT": {$regex: '^05[/][0-9]{2}[/]2007$' } })  -- answer = [ "FELONY", "VIOLATION", "MISDEMEANOR" ]
                    for currLAW_CAT_CDBeingProcessed in arrLAW_CAT_CD:
                        #print(f"\nProcessing for:\nLAW_CAT_CD={currLAW_CAT_CDBeingProcessed}")
                        logging.warning(f"\nProcessing for:\nLAW_CAT_CD={currLAW_CAT_CDBeingProcessed}")
                        pipeline9 = [ {"$match": {"LAW_CAT_CD": "garbage", "BORO_NM": "garbage", "CMPLNT_FR_DT": {"$regex": "garbage" } } } , {"$group": {"_id": 1, "TotalCrimesForLAW_CAT_CDForMonthYearBoro": {"$sum": 1}}} ]
                        newRegexString = '^' + str(currPedesMonthBeingProcessed).zfill(2) + '[/][0-9]{2}[/]' + str(currPedesYearBeingProcessed) + '$'
                        pipeline9[0]['$match']['CMPLNT_FR_DT']['$regex'] = newRegexString
                        pipeline9[0]['$match']['BORO_NM'] = currPedesBoroBeingProcessed.upper()
                        pipeline9[0]['$match']['LAW_CAT_CD'] = currLAW_CAT_CDBeingProcessed
                        #print(f"query pipeline9=\n{pipeline9}")
                        rowDataToWrite.append(currLAW_CAT_CDBeingProcessed)
                        cursorTotalCrimesInLAW_CAT_CDMonthYearBoroCount = coll1CrimeData.aggregate(pipeline9)
                        toAppendValue = 0
                        for cursor in cursorTotalCrimesInLAW_CAT_CDMonthYearBoroCount:
                            #print(f"     entered for cursor\t cursor={cursor}")
                            logging.warning(f"     entered for cursor\t cursor={cursor}")
                            try:
                                toAppendValue = cursor["TotalCrimesForLAW_CAT_CDForMonthYearBoro"]
                            except KeyError:
                                #print(f"\n\t\tKeyError for LAW_CAT_CD={currLAW_CAT_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                #print(f"\t\tSo inserted 0 for the crime count and continued.")
                                logging.warning(f"\n\t\tKeyError for LAW_CAT_CD={currLAW_CAT_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.warning(f"\n\t\tSo inserted 0 for the crime count and continued.")
                                toAppendValue = 0
                            except Exception as e:
                                cursorTotalCrimesInLAW_CAT_CDMonthYearBoroCount.close()
                                print(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for LAW_CAT_CD={currLAW_CAT_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                print(f"ERROR: Error details = {e}")
                                logging.error(f"\nERROR: Unhandled exception processing for:\n\t\tKeyError for LAW_CAT_CD={currLAW_CAT_CDBeingProcessed} , Year={currPedesYearBeingProcessed} , Month={currPedesMonthBeingProcessed} , Boro={currPedesBoroBeingProcessed.upper()}")
                                logging.error(f"ERROR: Error details = {e}")
                                return(209)
                        cursorTotalCrimesInLAW_CAT_CDMonthYearBoroCount.close()
                        rowDataToWrite.append(toAppendValue)
                    print(f"Cur 9 done")
                    logging.warning(f"Cur 9 done")
                    
                    # all data for the csv file row is ready, so write it to output file
                    try:
                        mywriter.writerow(rowDataToWrite)
                        countTotalRowsWrittenToOutputFile += 1
                    except Exception as e1:
                        print(f"\nERROR: Unhandled exception writing data row:\n\t\t{rowDataToWrite}")
                        logging.error(f"\nERROR: Unhandled exception writing data row:\n\t\t{rowDataToWrite}")
                        print(f"ERROR: Error details = {e1}")
                        logging.error(f"ERROR: Error details = {e1}")
                        return(301)

    return(0)
####
### ----------------- FUNCTION DEFINITIONS  END  ------------- ###

### ------------------- MAIN LOGIC STARTS HERE  -------------- ###

print(f"\nStarted the program\n")
#print('\nStartTime is:',datetime.now().strftime("%c"))
print(f'\nStartTime is: {datetime.now().strftime("%c")}')
logging.warning(f"\nStarted the program\n")
#logging.warning('\nStartTime is:',datetime.now().strftime("%c"))
logging.warning(f'\nStartTime is: {datetime.now().strftime("%c")}')

countTotalRowsWrittenToOutputFile = 0
# open the output file and write the header row
with open(outputCSVfile, 'w', newline='') as opCsvFile:
    mywriter = csv.writer(opCsvFile) #, quotechar='"')
    mywriter.writerow(FIELDNAMES)
    countTotalRowsWrittenToOutputFile += 1
print(f"\t\tOpened output file and wrote the header.\n\t\tOutput file location: {outputCSVfile}")
logging.warning(f"\n\t\tOpened output file and wrote the header.\n\t\tOutput file location: {outputCSVfile}")

# process the entries from mongo dbs and write the data to output file
print(f"\n\t\tStarting mongo db access and data writing...")
logging.warning(f"\n\t\tStarting mongo db access and data writing...")
processEntryRC = 0
processEntryRC = processDbEntriesAndWriteDataToOutputFile()
if processEntryRC != 0:
    print(f"\nERROR: function processDbEntriesAndWriteDataToOutputFile had RC = {processEntryRC}")
    logging.error(f"\nERROR: function processDbEntriesAndWriteDataToOutputFile had RC = {processEntryRC}")
    print(f"Exiting program with RC=100")
    logging.warning(f"Exiting program with RC=100")
    exit(100)
else:
    print(f"\nSuccessfully processed mongo db entries and wrote data to output file.")
    print(f"Total writes, including header, to output file={countTotalRowsWrittenToOutputFile}")
    logging.warning(f"\nSuccessfully processed mongo db entries and wrote data to output file.")
    logging.warning(f"Total writes, including header, to output file={countTotalRowsWrittenToOutputFile}")

## all good, exiting the program
print(f"\n\nNormal exit")
logging.warning(f"\nNormal exit")

print(f'\nEndTime is: {datetime.now().strftime("%c")}')
logging.warning(f'\nEndTime is: {datetime.now().strftime("%c")}')

exit(0)
### -------------------- MAIN LOGIC ENDS HERE  --------------- ###